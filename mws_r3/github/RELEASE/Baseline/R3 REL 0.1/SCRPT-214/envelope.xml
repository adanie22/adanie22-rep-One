<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<ns1:Envelope xmlns:ns1="http://servicemesh.com/agility/api" xmlns:ns2="http://servicemesh.com/core/messaging" ns1:version="3.0" ns1:productVersion="9.2.4">
    <ns1:Asset xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="ns1:Script">
        <ns1:name>MWS2R2 - Exchange Features</ns1:name>
        <ns1:id>214</ns1:id>
        <ns1:description></ns1:description>
        <ns1:uuid>4a62bb67-481d-4274-922c-8d8e973f910a</ns1:uuid>
        <ns1:assetType>
            <ns1:name>script</ns1:name>
            <ns1:href>assettype/2</ns1:href>
            <ns1:id>2</ns1:id>
            <ns1:rel>up</ns1:rel>
            <ns1:type>application/com.servicemesh.agility.api.AssetType+xml</ns1:type>
            <ns1:position>0</ns1:position>
        </ns1:assetType>
        <ns1:top>true</ns1:top>
        <ns1:assetPath>/Root/MWS2/MWS2_CDCR2</ns1:assetPath>
        <ns1:detailedAssetPath>/Root:#ID#1:#TYPE#VMContainer/MWS2:#ID#8:#TYPE#VMContainer/MWS2_CDCR2:#ID#9:#TYPE#VMProject</ns1:detailedAssetPath>
        <ns1:lifecycleVersion>-1</ns1:lifecycleVersion>
        <ns1:removable>true</ns1:removable>
        <ns1:domain>
            <ns1:name>domain1</ns1:name>
            <ns1:href>domain/1</ns1:href>
            <ns1:id>1</ns1:id>
            <ns1:rel>up</ns1:rel>
            <ns1:type>application/com.servicemesh.agility.api.Domain+xml</ns1:type>
            <ns1:position>0</ns1:position>
        </ns1:domain>
        <ns1:creator>
            <ns1:name>mfreeman</ns1:name>
            <ns1:href>user/12</ns1:href>
            <ns1:id>12</ns1:id>
            <ns1:rel>up</ns1:rel>
            <ns1:type>application/com.servicemesh.agility.api.User+xml</ns1:type>
            <ns1:position>0</ns1:position>
        </ns1:creator>
        <ns1:created>2015-03-10T21:33:19-05:00</ns1:created>
        <ns1:lockType>0</ns1:lockType>
        <ns1:lastModified>2015-03-30T21:36:31-05:00</ns1:lastModified>
        <ns1:parent>
            <ns1:name>MWS2_CDCR2</ns1:name>
            <ns1:href>project/9</ns1:href>
            <ns1:id>9</ns1:id>
            <ns1:rel>up</ns1:rel>
            <ns1:type>application/com.servicemesh.agility.api.Project+xml</ns1:type>
            <ns1:position>0</ns1:position>
        </ns1:parent>
        <ns1:slot>866b7930-d374-4598-a3d2-6749b231e0c8</ns1:slot>
        <ns1:version>-1</ns1:version>
        <ns1:latest>false</ns1:latest>
        <ns1:slotId>177</ns1:slotId>
        <ns1:versionStatus>inprogress</ns1:versionStatus>
        <ns1:checkoutAllowed>false</ns1:checkoutAllowed>
        <ns1:headAllowed>false</ns1:headAllowed>
        <ns1:operatingSystem>Windows</ns1:operatingSystem>
        <ns1:enableExtensions>false</ns1:enableExtensions>
        <ns1:body>. .\GlobalRepository.ps1


Write-Host &quot;Creating Scheduled Task to re-enable WinRM at next startup&quot;

$RebootCount=1
$postScript = @'
$c = get-content &quot;c:\deploy\winrmdelaycount.txt&quot;
$ci = [Convert]::ToInt32($c)
if($ci -gt 1){
    	Add-Content c:\deploy\stopwinrm.txt &quot;$((get-date).ToLongTimeString()) Reboot counter: $ci&quot;
	$ci--
    out-file -FilePath c:\deploy\winrmdelaycount.txt -InputObject $ci

}else{
    Add-Content c:\deploy\stopwinrm.txt &quot;$((get-date).ToLongTimeString()) Setting winRM to auto&quot;		
    set-service -name WinRM -StartupType Automatic
    Unregister-ScheduledTask -TaskName &quot;DelayedWinRM&quot; -Confirm:$false
    del  c:\deploy\winrmdelaycount.txt
}
'@
$stopWinRMScript = @'
Add-Content c:\deploy\stopwinrm.txt &quot;$((get-date).ToLongTimeString()) StopWinRM Script Started&quot;
do{
$count = @(get-process -ea silentlycontinue powershell).count
}while($count -gt 1)
Add-Content c:\deploy\stopwinrm.txt &quot;$((get-date).ToLongTimeString()) Agility Script Complete&quot;
Start-Sleep -s 5
Add-Content c:\deploy\stopwinrm.txt &quot;$((get-date).ToLongTimeString()) Stopping WinRM&quot;
Stop-Service -name WinRM
Add-Content c:\deploy\stopwinrm.txt &quot;$((get-date).ToLongTimeString()) Deregistering scheduled task&quot;
Unregister-ScheduledTask -TaskName &quot;StopWinRM&quot; -Confirm:$false
Start-Sleep -s 10
Add-Content c:\deploy\stopwinrm.txt &quot;$((get-date).ToLongTimeString()) Rebooting&quot;
Restart-Computer -force:$true
'@

out-file -FilePath c:\deploy\winrmdelay.ps1 -InputObject $postScript
out-file -FilePath c:\deploy\winrmdelaycount.txt -InputObject $RebootCount
out-file -FilePath c:\deploy\stopwinrm.ps1 -InputObject $stopWinRMScript

$username = &quot;service.exchange&quot;
$password = (get-globalvariable(&quot;ServiceAccount\$username&quot;)).value
$domain =  (get-globalvariable(&quot;Global/DomainNetBIOS&quot;)).value
$username = &quot;$domain\$username&quot;

$action = New-ScheduledTaskAction -Execute 'powershell.exe' -Argument 'c:\deploy\winrmdelay.ps1'
$trigger = New-ScheduledTaskTrigger -AtStartup
$s =  New-ScheduledTaskSettingsSet
$d = New-ScheduledTask -Action $action  -Trigger $trigger -Settings $s
$r = Register-ScheduledTask &quot;DelayedWinRM&quot; -InputObject $d -User $username -Password $password

Write-Host &quot;Scheduled Task created. Setting WinRM startup state to Disabled.&quot;
set-service -name WinRM -StartupType Disabled 

write-output &quot;Start task to stop winRM service after this script stops&quot;

$action = New-ScheduledTaskAction -Execute 'powershell.exe' -Argument 'c:\deploy\stopwinrm.ps1'
$trigger = New-ScheduledTaskTrigger -Once -At 11:50pm
$s =  New-ScheduledTaskSettingsSet
$d = New-ScheduledTask -Action $action  -Trigger $trigger -Settings $s
$r = Register-ScheduledTask &quot;StopWinRM&quot; -InputObject $d -User $username -Password $password
Start-ScheduledTask -TaskName &quot;StopWinRM&quot;





Write-Host &quot;Installing features for Exchange&quot;
$Result = Install-WindowsFeature AS-HTTP-Activation, Desktop-Experience, NET-Framework-45-Features, RPC-over-HTTP-proxy, RSAT-Clustering, RSAT-Clustering-CmdInterface, RSAT-Clustering-Mgmt, RSAT-Clustering-PowerShell, Web-Mgmt-Console, WAS-Process-Model, Web-Asp-Net45, Web-Basic-Auth, Web-Client-Auth, Web-Digest-Auth, Web-Dir-Browsing, Web-Dyn-Compression, Web-Http-Errors, Web-Http-Logging, Web-Http-Redirect, Web-Http-Tracing, Web-ISAPI-Ext, Web-ISAPI-Filter, Web-Lgcy-Mgmt-Console, Web-Metabase, Web-Mgmt-Console, Web-Mgmt-Service, Web-Net-Ext45, Web-Request-Monitor, Web-Server, Web-Stat-Compression, Web-Static-Content, Web-Windows-Auth, Web-WMI, Windows-Identity-Foundation

If ($Result.Success) {
	Write-Host &quot;Complete: $($Result.ExitCode.ToString())&quot;
	If ($Result.RestartNeeded.ToString() -eq &quot;No&quot;) {
		Write-Host &quot;No Restart required&quot;
		Exit 0
	}
} Else {
	Write-Host &quot;Failed: $($Result.ExitCode.ToString())&quot;
	Exit -1
}

Add-Content c:\deploy\stopwinrm.txt &quot;$((get-date).ToLongTimeString()) Main Script Complete.&quot;


#Write-Host &quot;Waiting for a reboot...&quot;

#$StartTime = Get-Date

#$Timeout = $TIMEOUT

#$MatchString = &quot;The process (.+) has initiated the restart of computer .+ on behalf of .+ for the following reason: (.+)&quot;
#Do {
#	$LastLogs = Get-EventLog System -After (Get-Date).AddMinutes(-2)
#	ForEach ($E in $LastLogs) {
#		If ($E.Message -Match $MatchString) {
#			Write-Host &quot;Server rebooting. Event found:&quot;
#			Write-Host $E.Message
#			Exit 0
#		}
#	}
#} While ((Get-Date).AddMinutes($Timeout) -gt $StartTime)

#Write-Host &quot;Waited for $Timeout minutes - No reboot detected&quot;
Exit 0
</ns1:body>
        <ns1:type>Guest</ns1:type>
        <ns1:language>
            <ns1:name>powershell</ns1:name>
            <ns1:href>scriptlanguage/5</ns1:href>
            <ns1:id>5</ns1:id>
            <ns1:rel>down</ns1:rel>
            <ns1:type>application/com.servicemesh.agility.api.ScriptLanguage+xml</ns1:type>
            <ns1:position>0</ns1:position>
        </ns1:language>
        <ns1:runAsAdmin>false</ns1:runAsAdmin>
        <ns1:timeout>3600</ns1:timeout>
        <ns1:retries>2</ns1:retries>
        <ns1:delay>300</ns1:delay>
        <ns1:errorAction>Continue</ns1:errorAction>
        <ns1:rebootRequired>false</ns1:rebootRequired>
        <ns1:variable>
            <ns1:name>TIMEOUT</ns1:name>
            <ns1:id>302</ns1:id>
            <ns1:description></ns1:description>
            <ns1:uuid>b603b8ca-01c2-4b54-87ae-739307b1484c</ns1:uuid>
            <ns1:top>false</ns1:top>
            <ns1:assetPath></ns1:assetPath>
            <ns1:detailedAssetPath></ns1:detailedAssetPath>
            <ns1:lifecycleVersion>-1</ns1:lifecycleVersion>
            <ns1:removable>true</ns1:removable>
            <ns1:displayName>TIMEOUT</ns1:displayName>
            <ns1:readable>true</ns1:readable>
            <ns1:writable>true</ns1:writable>
            <ns1:minRequired>0</ns1:minRequired>
            <ns1:maxAllowed>60</ns1:maxAllowed>
            <ns1:validator>
                <ns1:IntegerRangeValidator>
                    <ns1:top>false</ns1:top>
                </ns1:IntegerRangeValidator>
                <ns1:IntegerScaleValidator>
                    <ns1:top>false</ns1:top>
                    <ns1:maxDigits>20</ns1:maxDigits>
                </ns1:IntegerScaleValidator>
            </ns1:validator>
            <ns1:defaultValue>
                <ns1:id>8168</ns1:id>
                <ns1:name></ns1:name>
                <ns1:encrypted>false</ns1:encrypted>
                <ns1:overridable>true</ns1:overridable>
                <ns1:propertyType>
                    <ns1:name>integer-any</ns1:name>
                    <ns1:href>/propertytype/1</ns1:href>
                    <ns1:id>1</ns1:id>
                    <ns1:rel>up</ns1:rel>
                    <ns1:type>application/com.servicemesh.agility.api.PropertyType+xml</ns1:type>
                    <ns1:position>0</ns1:position>
                </ns1:propertyType>
                <ns1:intValue>10</ns1:intValue>
            </ns1:defaultValue>
            <ns1:propertyType>
                <ns1:name>integer-any</ns1:name>
                <ns1:href>propertytype/1</ns1:href>
                <ns1:id>1</ns1:id>
                <ns1:type>application/com.servicemesh.agility.api.PropertyType+xml</ns1:type>
            </ns1:propertyType>
            <ns1:assetPropertyLinkId>593c94b7-7b75-4d47-8a64-43847f00ae12</ns1:assetPropertyLinkId>
        </ns1:variable>
        <ns1:runOnProvisionOnly>false</ns1:runOnProvisionOnly>
    </ns1:Asset>
</ns1:Envelope>
