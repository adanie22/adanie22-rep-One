<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<ns1:Envelope xmlns:ns1="http://servicemesh.com/agility/api" xmlns:ns2="http://servicemesh.com/core/messaging" ns1:version="3.0" ns1:productVersion="9.2.4">
    <ns1:Asset xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="ns1:Script">
        <ns1:name>MWS2R3 - AD Rename Computer</ns1:name>
        <ns1:id>263</ns1:id>
        <ns1:description></ns1:description>
        <ns1:uuid>0a9f62ed-9e20-4237-80af-86c649d98c04</ns1:uuid>
        <ns1:assetType>
            <ns1:name>script</ns1:name>
            <ns1:href>assettype/2</ns1:href>
            <ns1:id>2</ns1:id>
            <ns1:rel>up</ns1:rel>
            <ns1:type>application/com.servicemesh.agility.api.AssetType+xml</ns1:type>
            <ns1:position>0</ns1:position>
        </ns1:assetType>
        <ns1:top>true</ns1:top>
        <ns1:assetPath>/Root/MWS2R3_SYD</ns1:assetPath>
        <ns1:detailedAssetPath>/Root:#ID#1:#TYPE#VMContainer/MWS2R3_SYD:#ID#8:#TYPE#VMProject</ns1:detailedAssetPath>
        <ns1:lifecycleVersion>-1</ns1:lifecycleVersion>
        <ns1:removable>true</ns1:removable>
        <ns1:domain>
            <ns1:name>domain1</ns1:name>
            <ns1:href>domain/1</ns1:href>
            <ns1:id>1</ns1:id>
            <ns1:rel>up</ns1:rel>
            <ns1:type>application/com.servicemesh.agility.api.Domain+xml</ns1:type>
            <ns1:position>0</ns1:position>
        </ns1:domain>
        <ns1:creator>
            <ns1:name>admin</ns1:name>
            <ns1:href>user/1</ns1:href>
            <ns1:id>1</ns1:id>
            <ns1:rel>up</ns1:rel>
            <ns1:type>application/com.servicemesh.agility.api.User+xml</ns1:type>
            <ns1:position>0</ns1:position>
        </ns1:creator>
        <ns1:created>2015-05-27T17:23:30+10:00</ns1:created>
        <ns1:lockType>0</ns1:lockType>
        <ns1:lastModified>2015-05-27T17:25:29+10:00</ns1:lastModified>
        <ns1:parent>
            <ns1:name>MWS2R3_SYD</ns1:name>
            <ns1:href>project/8</ns1:href>
            <ns1:id>8</ns1:id>
            <ns1:rel>up</ns1:rel>
            <ns1:type>application/com.servicemesh.agility.api.Project+xml</ns1:type>
            <ns1:position>0</ns1:position>
        </ns1:parent>
        <ns1:slot>be49d25b-3405-4f3f-8509-8bd2448968f4</ns1:slot>
        <ns1:version>4</ns1:version>
        <ns1:latest>false</ns1:latest>
        <ns1:publishComment></ns1:publishComment>
        <ns1:slotId>124</ns1:slotId>
        <ns1:publisher>
            <ns1:name>admin</ns1:name>
            <ns1:href>user/1</ns1:href>
            <ns1:id>1</ns1:id>
            <ns1:rel>up</ns1:rel>
            <ns1:type>application/com.servicemesh.agility.api.User+xml</ns1:type>
            <ns1:position>0</ns1:position>
        </ns1:publisher>
        <ns1:versionStatus>active</ns1:versionStatus>
        <ns1:checkoutAllowed>false</ns1:checkoutAllowed>
        <ns1:headAllowed>false</ns1:headAllowed>
        <ns1:operatingSystem>Windows|2012</ns1:operatingSystem>
        <ns1:enableExtensions>false</ns1:enableExtensions>
        <ns1:body>#	ScriptName: 	AD Rename Computer
#	Author: 	Mark Freeman
#	Required Variables: COMPONENTID, INSTANCEID
#	Description:
#
#	Renames a computer based on MWS2 naming standard
#	Registers the computername and IP address in the key value store
#	Downloads common and computer specific files from the deployment file share
#	Resets the local administrator account password to a random value
#	Registers the password in the key value share
#	Updates the instance name in Cloud Provider
#
#	2015/05/21	DRidley		-Updated Rename Computer section to check if IstanceID has already been deployed


. .\GlobalRepository.ps1


$ComponentID = $COMPONENTID
$InstanceID =  $INSTANCEID
$DomainFQDN =  (get-globalvariable(&quot;Global\DomainFQDN&quot;)).value

$CustomerID = (get-globalvariable &quot;Global/CustomerID&quot;).value
$LocationID = (get-globalvariable &quot;Global/LocationID&quot;).value

# Set Primary &amp; Secondary DNS on active NIC. This is required to check if InstanceID has already been deployed
$PrimaryDNS =   (get-globalvariable(&quot;AD\PrimaryDNS&quot;)).value
$SecondaryDNS = (get-globalvariable(&quot;AD\SecondaryDNS&quot;)).value
$NICindex = Get-NetAdapter -physical | where status -eq 'up' | Select 'Name' -ExpandProperty ifIndex
Write-Output &quot;Setting $PrimaryDNS and $SecondaryDNS as DNS servers on active NIC&quot;
Set-DNSClientServerAddress -InterfaceIndex $NICindex -ServerAddresses ($PrimaryDNS,$SecondaryDNS)


# Rename Computer
$Computername = $($CustomerID + $ComponentID + $LocationID + $InstanceID + &quot;W&quot;)
Write-Output &quot;Checking if $Computername has been previously deployed...&quot;
If (Test-Connection -Computername &quot;$Computername.$DomainFQDN&quot; -Count 2 -Quiet)
{
	Write-Output &quot;ERROR: $Computername is already deployed! Exiting...&quot;
	EXIT 1
}
Else
{
	Write-Output &quot;$ComponentID-$InstanceID does not appear to have been previously deployed. Continuing...&quot;
	Write-Output &quot;Setting computername to $Computername&quot;
	Rename-Computer -NewName $Computername -force
}


write-output &quot;Storing IP Address in key value store&quot;
$key = 'Network/{0}' -f $Computername
$ip = Get-NetIPAddress | Where-Object -FilterScript {$_.AddressFamily -eq &quot;IPv4&quot; } | Where-Object -FilterScript {$_.IPAddress -ne &quot;127.0.0.1&quot;}
$ipa = $ip.IPAddress
Set-globalvariable $key $ipa

write-output &quot;Downloading common files and computer files from repository&quot;

get-files &quot;$ComponentID$InstanceID&quot;

write-output &quot;Resetting local administrator password&quot;
. .\New-RandomPassword.ps1
$password = new-randompassword -PasswordLength 10
$adminUser = [ADSI] &quot;WinNT://./SOE-LOAD,User&quot;
$adminUser.SetPassword($password)
Set-globalvariable &quot;Administrator/$Computername&quot; $password

#register name tag
#write-output &quot;Registering AWS name tag&quot;
#$aid  = Invoke-RestMethod -Uri http://169.254.169.254/latest/meta-data/instance-id
#$uri = &quot;http://10.0.0.23:5000/p1/&quot; + $aid + &quot;?tagname=&quot; + $Computername 
#Invoke-RestMethod -Uri $uri -Method Put


write-output &quot;Restarting computer&quot;</ns1:body>
        <ns1:type>Guest</ns1:type>
        <ns1:language>
            <ns1:name>powershell</ns1:name>
            <ns1:href>scriptlanguage/5</ns1:href>
            <ns1:id>5</ns1:id>
            <ns1:rel>down</ns1:rel>
            <ns1:type>application/com.servicemesh.agility.api.ScriptLanguage+xml</ns1:type>
            <ns1:position>0</ns1:position>
        </ns1:language>
        <ns1:runAsAdmin>false</ns1:runAsAdmin>
        <ns1:timeout>3600</ns1:timeout>
        <ns1:retries>0</ns1:retries>
        <ns1:delay>0</ns1:delay>
        <ns1:errorAction>Continue</ns1:errorAction>
        <ns1:rebootRequired>true</ns1:rebootRequired>
        <ns1:variable>
            <ns1:name>INSTANCEID</ns1:name>
            <ns1:id>513</ns1:id>
            <ns1:description></ns1:description>
            <ns1:uuid>a03c9761-2ddf-4b07-84c3-03155365b7c7</ns1:uuid>
            <ns1:top>false</ns1:top>
            <ns1:assetPath></ns1:assetPath>
            <ns1:detailedAssetPath></ns1:detailedAssetPath>
            <ns1:lifecycleVersion>-1</ns1:lifecycleVersion>
            <ns1:removable>true</ns1:removable>
            <ns1:displayName>INSTANCEID</ns1:displayName>
            <ns1:readable>true</ns1:readable>
            <ns1:writable>true</ns1:writable>
            <ns1:minRequired>0</ns1:minRequired>
            <ns1:maxAllowed>1</ns1:maxAllowed>
            <ns1:validator/>
            <ns1:propertyType>
                <ns1:name>string-any</ns1:name>
                <ns1:href>propertytype/4</ns1:href>
                <ns1:id>4</ns1:id>
                <ns1:type>application/com.servicemesh.agility.api.PropertyType+xml</ns1:type>
            </ns1:propertyType>
            <ns1:assetPropertyLinkId>a6456190-233d-4da2-b2db-0176dc2fc1af</ns1:assetPropertyLinkId>
        </ns1:variable>
        <ns1:variable>
            <ns1:name>COMPONENTID</ns1:name>
            <ns1:id>514</ns1:id>
            <ns1:description></ns1:description>
            <ns1:uuid>0ee97a5e-2783-4261-9f35-c14735ba78e8</ns1:uuid>
            <ns1:top>false</ns1:top>
            <ns1:assetPath></ns1:assetPath>
            <ns1:detailedAssetPath></ns1:detailedAssetPath>
            <ns1:lifecycleVersion>-1</ns1:lifecycleVersion>
            <ns1:removable>true</ns1:removable>
            <ns1:displayName>COMPONENTID</ns1:displayName>
            <ns1:readable>true</ns1:readable>
            <ns1:writable>true</ns1:writable>
            <ns1:minRequired>0</ns1:minRequired>
            <ns1:maxAllowed>1</ns1:maxAllowed>
            <ns1:validator/>
            <ns1:propertyType>
                <ns1:name>string-any</ns1:name>
                <ns1:href>propertytype/4</ns1:href>
                <ns1:id>4</ns1:id>
                <ns1:type>application/com.servicemesh.agility.api.PropertyType+xml</ns1:type>
            </ns1:propertyType>
            <ns1:assetPropertyLinkId>23d25ec2-96bc-4153-975c-2bef711c6d58</ns1:assetPropertyLinkId>
        </ns1:variable>
        <ns1:runOnProvisionOnly>false</ns1:runOnProvisionOnly>
    </ns1:Asset>
</ns1:Envelope>
