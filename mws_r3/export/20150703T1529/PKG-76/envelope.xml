<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<ns1:Envelope xmlns:ns1="http://servicemesh.com/agility/api" xmlns:ns2="http://servicemesh.com/core/messaging" ns1:version="3.0" ns1:productVersion="9.2.4">
    <ns1:pendingAsset xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="ns1:Script">
        <ns1:name>MWS2R3 - CM2012 - Primary Env Variables</ns1:name>
        <ns1:id>378</ns1:id>
        <ns1:description>Sets variables used in subsequent scripts.</ns1:description>
        <ns1:uuid>86ef8337-de5b-4699-9aa7-d06e99cedb79</ns1:uuid>
        <ns1:assetType>
            <ns1:name>script</ns1:name>
            <ns1:href>assettype/2</ns1:href>
            <ns1:id>2</ns1:id>
            <ns1:rel>up</ns1:rel>
            <ns1:type>application/com.servicemesh.agility.api.AssetType+xml</ns1:type>
            <ns1:position>0</ns1:position>
        </ns1:assetType>
        <ns1:top>false</ns1:top>
        <ns1:assetPath>/Root/MWS2R3_SYD</ns1:assetPath>
        <ns1:detailedAssetPath>/Root:#ID#1:#TYPE#VMContainer/MWS2R3_SYD:#ID#8:#TYPE#VMProject</ns1:detailedAssetPath>
        <ns1:lifecycleVersion>-1</ns1:lifecycleVersion>
        <ns1:removable>true</ns1:removable>
        <ns1:domain>
            <ns1:name>domain1</ns1:name>
            <ns1:href>domain/1</ns1:href>
            <ns1:id>1</ns1:id>
            <ns1:rel>up</ns1:rel>
            <ns1:type>application/com.servicemesh.agility.api.Domain+xml</ns1:type>
            <ns1:position>0</ns1:position>
        </ns1:domain>
        <ns1:creator>
            <ns1:name>dridley</ns1:name>
            <ns1:href>user/12</ns1:href>
            <ns1:id>12</ns1:id>
            <ns1:rel>up</ns1:rel>
            <ns1:type>application/com.servicemesh.agility.api.User+xml</ns1:type>
            <ns1:position>0</ns1:position>
        </ns1:creator>
        <ns1:created>2015-06-22T17:31:05+10:00</ns1:created>
        <ns1:lockType>0</ns1:lockType>
        <ns1:lastModified>2015-06-22T17:33:31+10:00</ns1:lastModified>
        <ns1:parent>
            <ns1:name>MWS2R3_SYD</ns1:name>
            <ns1:href>project/8</ns1:href>
            <ns1:id>8</ns1:id>
            <ns1:rel>up</ns1:rel>
            <ns1:type>application/com.servicemesh.agility.api.Project+xml</ns1:type>
            <ns1:position>0</ns1:position>
        </ns1:parent>
        <ns1:slot>a9e0cee7-f07e-48c7-8d98-c3c08cea34b3</ns1:slot>
        <ns1:version>2</ns1:version>
        <ns1:latest>false</ns1:latest>
        <ns1:publishComment></ns1:publishComment>
        <ns1:slotId>188</ns1:slotId>
        <ns1:publisher>
            <ns1:name>dridley</ns1:name>
            <ns1:href>user/12</ns1:href>
            <ns1:id>12</ns1:id>
            <ns1:rel>up</ns1:rel>
            <ns1:type>application/com.servicemesh.agility.api.User+xml</ns1:type>
            <ns1:position>0</ns1:position>
        </ns1:publisher>
        <ns1:versionStatus>active</ns1:versionStatus>
        <ns1:checkoutAllowed>false</ns1:checkoutAllowed>
        <ns1:headAllowed>false</ns1:headAllowed>
        <ns1:operatingSystem>Windows</ns1:operatingSystem>
        <ns1:enableExtensions>false</ns1:enableExtensions>
        <ns1:body># Load Common functions
. .\Logging.ps1
. .\GlobalRepository.ps1
. .\LaunchProcess.ps1
. .\FilesUtility.ps1

# get current script location
$scriptPath = split-path -parent $MyInvocation.MyCommand.Definition
$scriptName = $MyInvocation.MyCommand.Name
 
ConfigureLogging $scriptPath $scriptName
 
#########################################################################
# Main
#########################################################################
 
 
Log &quot;**** Starting: Static Variables... ****&quot;
Log &quot;`n&quot;

If ($CM_SITECODE -eq $NULL) 		{Write-Host 'ERROR: $CM_SITECODE not defined'; EXIT 1}
If ($CM_SITEDESCRIPTION -eq $NULL) 	{Write-Host 'ERROR: $CM_SITEDESCRIPTION not defined'; EXIT 1}
If ($CM_SMSINSTALLDIR -eq $NULL) 	{Write-Host 'ERROR: $CM_SMSINSTALLDIR not defined'; EXIT 1}
If ($SQL_COMPONENTID -eq $NULL) 	{Write-Host 'ERROR: $SQL_COMPONENTID not defined'; EXIT 1}
If ($SQL_INSTANCEID -eq $NULL) 		{Write-Host 'ERROR: $SQL_INSTANCEID not defined'; EXIT 1}
If ($SQL_DATAFILEPATH -eq $NULL) 	{Write-Host 'ERROR: $SQL_DATAFILEPATH not defined'; EXIT 1}
If ($SQL_LOGFILEPATH -eq $NULL) 	{Write-Host 'ERROR: $SQL_LOGFILEPATH not defined'; EXIT 1}
If ($SQL_INSTANCENAME -eq $NULL) 	{Write-Host 'ERROR: $SQL_INSTANCENAME not defined'; EXIT 1}


Log &quot;Set Primary Specific Environment Variables...&quot;
SETX CM_SiteCode 		$CM_SITECODE /M
SETX CM_SiteDescription $CM_SITEDESCRIPTION /M
SETX CM_SMSInstallDir 	$CM_SMSINSTALLDIR /M
SETX SQL_ComponentID 	$SQL_COMPONENTID /M
SETX SQL_InstanceID 	$SQL_INSTANCEID /M
SETX SQL_DataFilePath	$SQL_DATAFILEPATH /M
SETX SQL_LogFilePath 	$SQL_LOGFILEPATH /M
SETX SQL_InstanceName	$SQL_INSTANCENAME /M


Log &quot;**** Finished: Static Variables... ****&quot;</ns1:body>
        <ns1:type>Guest</ns1:type>
        <ns1:language>
            <ns1:name>powershell</ns1:name>
            <ns1:href>scriptlanguage/5</ns1:href>
            <ns1:id>5</ns1:id>
            <ns1:rel>down</ns1:rel>
            <ns1:type>application/com.servicemesh.agility.api.ScriptLanguage+xml</ns1:type>
            <ns1:position>0</ns1:position>
        </ns1:language>
        <ns1:runAsAdmin>false</ns1:runAsAdmin>
        <ns1:timeout>1800</ns1:timeout>
        <ns1:retries>0</ns1:retries>
        <ns1:delay>0</ns1:delay>
        <ns1:errorAction>Abort</ns1:errorAction>
        <ns1:rebootRequired>true</ns1:rebootRequired>
        <ns1:variable>
            <ns1:name>CM_SMSINSTALLDIR</ns1:name>
            <ns1:id>1019</ns1:id>
            <ns1:description>Folder where ConfigMgr will be installed</ns1:description>
            <ns1:uuid>0f2b7946-55e3-4ffb-be99-9a49e815036b</ns1:uuid>
            <ns1:top>false</ns1:top>
            <ns1:assetPath></ns1:assetPath>
            <ns1:detailedAssetPath></ns1:detailedAssetPath>
            <ns1:lifecycleVersion>-1</ns1:lifecycleVersion>
            <ns1:removable>true</ns1:removable>
            <ns1:displayName>CM_SMSINSTALLDIR</ns1:displayName>
            <ns1:readable>true</ns1:readable>
            <ns1:writable>true</ns1:writable>
            <ns1:minRequired>1</ns1:minRequired>
            <ns1:maxAllowed>1</ns1:maxAllowed>
            <ns1:validator/>
            <ns1:defaultValue>
                <ns1:id>36272</ns1:id>
                <ns1:name>CM_SMSINSTALLDIR</ns1:name>
                <ns1:encrypted>false</ns1:encrypted>
                <ns1:overridable>true</ns1:overridable>
                <ns1:propertyType>
                    <ns1:name>string-any</ns1:name>
                    <ns1:href>/propertytype/4</ns1:href>
                    <ns1:id>4</ns1:id>
                    <ns1:rel>up</ns1:rel>
                    <ns1:type>application/com.servicemesh.agility.api.PropertyType+xml</ns1:type>
                    <ns1:position>0</ns1:position>
                </ns1:propertyType>
                <ns1:propertyDefinition xsi:type="ns1:Link">
                    <ns1:name>CM_SMSINSTALLDIR</ns1:name>
                    <ns1:href>/propertydefinition/499</ns1:href>
                    <ns1:id>499</ns1:id>
                    <ns1:rel>up</ns1:rel>
                    <ns1:type>application/com.servicemesh.agility.api.PropertyDefinition+xml</ns1:type>
                    <ns1:position>0</ns1:position>
                </ns1:propertyDefinition>
                <ns1:stringValue>F:\SMS_ConfigMgr</ns1:stringValue>
            </ns1:defaultValue>
            <ns1:propertyType>
                <ns1:name>string-any</ns1:name>
                <ns1:href>propertytype/4</ns1:href>
                <ns1:id>4</ns1:id>
                <ns1:type>application/com.servicemesh.agility.api.PropertyType+xml</ns1:type>
            </ns1:propertyType>
            <ns1:assetPropertyLinkId>14d54ae3-f60b-4457-a2af-aebeedd254de</ns1:assetPropertyLinkId>
        </ns1:variable>
        <ns1:variable>
            <ns1:name>CM_SITEDESCRIPTION</ns1:name>
            <ns1:id>1020</ns1:id>
            <ns1:description>Description of ConfigMgr server</ns1:description>
            <ns1:uuid>d979be7b-ac38-42b8-8d29-22bd0119793b</ns1:uuid>
            <ns1:top>false</ns1:top>
            <ns1:assetPath></ns1:assetPath>
            <ns1:detailedAssetPath></ns1:detailedAssetPath>
            <ns1:lifecycleVersion>-1</ns1:lifecycleVersion>
            <ns1:removable>true</ns1:removable>
            <ns1:displayName>CM_SITEDESCRIPTION</ns1:displayName>
            <ns1:readable>true</ns1:readable>
            <ns1:writable>true</ns1:writable>
            <ns1:minRequired>1</ns1:minRequired>
            <ns1:maxAllowed>1</ns1:maxAllowed>
            <ns1:validator/>
            <ns1:defaultValue>
                <ns1:id>36273</ns1:id>
                <ns1:name>CM_SITEDESCRIPTION</ns1:name>
                <ns1:encrypted>false</ns1:encrypted>
                <ns1:overridable>true</ns1:overridable>
                <ns1:propertyType>
                    <ns1:name>string-any</ns1:name>
                    <ns1:href>/propertytype/4</ns1:href>
                    <ns1:id>4</ns1:id>
                    <ns1:rel>up</ns1:rel>
                    <ns1:type>application/com.servicemesh.agility.api.PropertyType+xml</ns1:type>
                    <ns1:position>0</ns1:position>
                </ns1:propertyType>
                <ns1:propertyDefinition xsi:type="ns1:Link">
                    <ns1:name>CM_SITEDESCRIPTION</ns1:name>
                    <ns1:href>/propertydefinition/500</ns1:href>
                    <ns1:id>500</ns1:id>
                    <ns1:rel>up</ns1:rel>
                    <ns1:type>application/com.servicemesh.agility.api.PropertyDefinition+xml</ns1:type>
                    <ns1:position>0</ns1:position>
                </ns1:propertyDefinition>
                <ns1:stringValue>&lt;place_holder&gt;</ns1:stringValue>
            </ns1:defaultValue>
            <ns1:propertyType>
                <ns1:name>string-any</ns1:name>
                <ns1:href>propertytype/4</ns1:href>
                <ns1:id>4</ns1:id>
                <ns1:type>application/com.servicemesh.agility.api.PropertyType+xml</ns1:type>
            </ns1:propertyType>
            <ns1:assetPropertyLinkId>fc4b4529-aca9-40c5-871e-2abc2b8d66dc</ns1:assetPropertyLinkId>
        </ns1:variable>
        <ns1:variable>
            <ns1:name>CM_SITECODE</ns1:name>
            <ns1:id>1021</ns1:id>
            <ns1:description>Sitecode of ConfigMgr server</ns1:description>
            <ns1:uuid>b5b906ed-81a9-4ad4-8e4f-77fce69b640f</ns1:uuid>
            <ns1:top>false</ns1:top>
            <ns1:assetPath></ns1:assetPath>
            <ns1:detailedAssetPath></ns1:detailedAssetPath>
            <ns1:lifecycleVersion>-1</ns1:lifecycleVersion>
            <ns1:removable>true</ns1:removable>
            <ns1:displayName>CM_SITECODE</ns1:displayName>
            <ns1:readable>true</ns1:readable>
            <ns1:writable>true</ns1:writable>
            <ns1:minRequired>1</ns1:minRequired>
            <ns1:maxAllowed>1</ns1:maxAllowed>
            <ns1:validator/>
            <ns1:defaultValue>
                <ns1:id>36274</ns1:id>
                <ns1:name>CM_SITECODE</ns1:name>
                <ns1:encrypted>false</ns1:encrypted>
                <ns1:overridable>true</ns1:overridable>
                <ns1:propertyType>
                    <ns1:name>string-any</ns1:name>
                    <ns1:href>/propertytype/4</ns1:href>
                    <ns1:id>4</ns1:id>
                    <ns1:rel>up</ns1:rel>
                    <ns1:type>application/com.servicemesh.agility.api.PropertyType+xml</ns1:type>
                    <ns1:position>0</ns1:position>
                </ns1:propertyType>
                <ns1:propertyDefinition xsi:type="ns1:Link">
                    <ns1:name>CM_SITECODE</ns1:name>
                    <ns1:href>/propertydefinition/501</ns1:href>
                    <ns1:id>501</ns1:id>
                    <ns1:rel>up</ns1:rel>
                    <ns1:type>application/com.servicemesh.agility.api.PropertyDefinition+xml</ns1:type>
                    <ns1:position>0</ns1:position>
                </ns1:propertyDefinition>
                <ns1:stringValue>&lt;place_holder&gt;</ns1:stringValue>
            </ns1:defaultValue>
            <ns1:propertyType>
                <ns1:name>string-any</ns1:name>
                <ns1:href>propertytype/4</ns1:href>
                <ns1:id>4</ns1:id>
                <ns1:type>application/com.servicemesh.agility.api.PropertyType+xml</ns1:type>
            </ns1:propertyType>
            <ns1:assetPropertyLinkId>cf179811-b0f8-4fde-977b-ee4b301c14f0</ns1:assetPropertyLinkId>
        </ns1:variable>
        <ns1:variable>
            <ns1:name>SQL_COMPONENTID</ns1:name>
            <ns1:id>1022</ns1:id>
            <ns1:description>Agility ComponentID of SQL server</ns1:description>
            <ns1:uuid>00c5a36b-86c0-4cfb-be2c-f4c75622f7c6</ns1:uuid>
            <ns1:top>false</ns1:top>
            <ns1:assetPath></ns1:assetPath>
            <ns1:detailedAssetPath></ns1:detailedAssetPath>
            <ns1:lifecycleVersion>-1</ns1:lifecycleVersion>
            <ns1:removable>true</ns1:removable>
            <ns1:displayName>SQL_COMPONENTID</ns1:displayName>
            <ns1:readable>true</ns1:readable>
            <ns1:writable>true</ns1:writable>
            <ns1:minRequired>1</ns1:minRequired>
            <ns1:maxAllowed>1</ns1:maxAllowed>
            <ns1:validator/>
            <ns1:defaultValue>
                <ns1:id>36275</ns1:id>
                <ns1:name>SQL_COMPONENTID</ns1:name>
                <ns1:encrypted>false</ns1:encrypted>
                <ns1:overridable>true</ns1:overridable>
                <ns1:propertyType>
                    <ns1:name>string-any</ns1:name>
                    <ns1:href>/propertytype/4</ns1:href>
                    <ns1:id>4</ns1:id>
                    <ns1:rel>up</ns1:rel>
                    <ns1:type>application/com.servicemesh.agility.api.PropertyType+xml</ns1:type>
                    <ns1:position>0</ns1:position>
                </ns1:propertyType>
                <ns1:propertyDefinition xsi:type="ns1:Link">
                    <ns1:name>SQL_COMPONENTID</ns1:name>
                    <ns1:href>/propertydefinition/502</ns1:href>
                    <ns1:id>502</ns1:id>
                    <ns1:rel>up</ns1:rel>
                    <ns1:type>application/com.servicemesh.agility.api.PropertyDefinition+xml</ns1:type>
                    <ns1:position>0</ns1:position>
                </ns1:propertyDefinition>
                <ns1:stringValue>CNN</ns1:stringValue>
            </ns1:defaultValue>
            <ns1:propertyType>
                <ns1:name>string-any</ns1:name>
                <ns1:href>propertytype/4</ns1:href>
                <ns1:id>4</ns1:id>
                <ns1:type>application/com.servicemesh.agility.api.PropertyType+xml</ns1:type>
            </ns1:propertyType>
            <ns1:assetPropertyLinkId>5d6b6be7-a16e-4052-8509-c842d25adc11</ns1:assetPropertyLinkId>
        </ns1:variable>
        <ns1:variable>
            <ns1:name>SQL_INSTANCEID</ns1:name>
            <ns1:id>1023</ns1:id>
            <ns1:description>Agility InstanceID of SQL server</ns1:description>
            <ns1:uuid>32eaed46-fe6f-4fac-a5ae-620811b8dc24</ns1:uuid>
            <ns1:top>false</ns1:top>
            <ns1:assetPath></ns1:assetPath>
            <ns1:detailedAssetPath></ns1:detailedAssetPath>
            <ns1:lifecycleVersion>-1</ns1:lifecycleVersion>
            <ns1:removable>true</ns1:removable>
            <ns1:displayName>SQL_INSTANCEID</ns1:displayName>
            <ns1:readable>true</ns1:readable>
            <ns1:writable>true</ns1:writable>
            <ns1:minRequired>1</ns1:minRequired>
            <ns1:maxAllowed>1</ns1:maxAllowed>
            <ns1:validator/>
            <ns1:defaultValue>
                <ns1:id>36276</ns1:id>
                <ns1:name>SQL_INSTANCEID</ns1:name>
                <ns1:encrypted>false</ns1:encrypted>
                <ns1:overridable>true</ns1:overridable>
                <ns1:propertyType>
                    <ns1:name>string-any</ns1:name>
                    <ns1:href>/propertytype/4</ns1:href>
                    <ns1:id>4</ns1:id>
                    <ns1:rel>up</ns1:rel>
                    <ns1:type>application/com.servicemesh.agility.api.PropertyType+xml</ns1:type>
                    <ns1:position>0</ns1:position>
                </ns1:propertyType>
                <ns1:propertyDefinition xsi:type="ns1:Link">
                    <ns1:name>SQL_INSTANCEID</ns1:name>
                    <ns1:href>/propertydefinition/503</ns1:href>
                    <ns1:id>503</ns1:id>
                    <ns1:rel>up</ns1:rel>
                    <ns1:type>application/com.servicemesh.agility.api.PropertyDefinition+xml</ns1:type>
                    <ns1:position>0</ns1:position>
                </ns1:propertyDefinition>
                <ns1:stringValue>&lt;place_holder&gt;</ns1:stringValue>
            </ns1:defaultValue>
            <ns1:propertyType>
                <ns1:name>string-any</ns1:name>
                <ns1:href>propertytype/4</ns1:href>
                <ns1:id>4</ns1:id>
                <ns1:type>application/com.servicemesh.agility.api.PropertyType+xml</ns1:type>
            </ns1:propertyType>
            <ns1:assetPropertyLinkId>1fd81893-1766-489f-9262-14edec2aad09</ns1:assetPropertyLinkId>
        </ns1:variable>
        <ns1:variable>
            <ns1:name>SQL_INSTANCENAME</ns1:name>
            <ns1:id>1024</ns1:id>
            <ns1:description>SQL Instance where ConfigMgr database will be created</ns1:description>
            <ns1:uuid>71336288-6ef8-423d-879a-7a9b4a26724a</ns1:uuid>
            <ns1:top>false</ns1:top>
            <ns1:assetPath></ns1:assetPath>
            <ns1:detailedAssetPath></ns1:detailedAssetPath>
            <ns1:lifecycleVersion>-1</ns1:lifecycleVersion>
            <ns1:removable>true</ns1:removable>
            <ns1:displayName>SQL_INSTANCENAME</ns1:displayName>
            <ns1:readable>true</ns1:readable>
            <ns1:writable>true</ns1:writable>
            <ns1:minRequired>1</ns1:minRequired>
            <ns1:maxAllowed>1</ns1:maxAllowed>
            <ns1:validator/>
            <ns1:defaultValue>
                <ns1:id>36277</ns1:id>
                <ns1:name>SQL_INSTANCENAME</ns1:name>
                <ns1:encrypted>false</ns1:encrypted>
                <ns1:overridable>true</ns1:overridable>
                <ns1:propertyType>
                    <ns1:name>string-any</ns1:name>
                    <ns1:href>/propertytype/4</ns1:href>
                    <ns1:id>4</ns1:id>
                    <ns1:rel>up</ns1:rel>
                    <ns1:type>application/com.servicemesh.agility.api.PropertyType+xml</ns1:type>
                    <ns1:position>0</ns1:position>
                </ns1:propertyType>
                <ns1:propertyDefinition xsi:type="ns1:Link">
                    <ns1:name>SQL_INSTANCENAME</ns1:name>
                    <ns1:href>/propertydefinition/504</ns1:href>
                    <ns1:id>504</ns1:id>
                    <ns1:rel>up</ns1:rel>
                    <ns1:type>application/com.servicemesh.agility.api.PropertyDefinition+xml</ns1:type>
                    <ns1:position>0</ns1:position>
                </ns1:propertyDefinition>
                <ns1:stringValue>MWSPCDEVICES01</ns1:stringValue>
            </ns1:defaultValue>
            <ns1:propertyType>
                <ns1:name>string-any</ns1:name>
                <ns1:href>propertytype/4</ns1:href>
                <ns1:id>4</ns1:id>
                <ns1:type>application/com.servicemesh.agility.api.PropertyType+xml</ns1:type>
            </ns1:propertyType>
            <ns1:assetPropertyLinkId>627c834f-0fe2-42ed-939e-f37bcd3c56f0</ns1:assetPropertyLinkId>
        </ns1:variable>
        <ns1:variable>
            <ns1:name>SQL_LOGFILEPATH</ns1:name>
            <ns1:id>1025</ns1:id>
            <ns1:description>Folder where DB Log file is stored on SQL server</ns1:description>
            <ns1:uuid>75db8e6a-00b9-4431-a284-0ed020bbc859</ns1:uuid>
            <ns1:top>false</ns1:top>
            <ns1:assetPath></ns1:assetPath>
            <ns1:detailedAssetPath></ns1:detailedAssetPath>
            <ns1:lifecycleVersion>-1</ns1:lifecycleVersion>
            <ns1:removable>true</ns1:removable>
            <ns1:displayName>SQL_LOGFILEPATH</ns1:displayName>
            <ns1:readable>true</ns1:readable>
            <ns1:writable>true</ns1:writable>
            <ns1:minRequired>1</ns1:minRequired>
            <ns1:maxAllowed>1</ns1:maxAllowed>
            <ns1:validator/>
            <ns1:defaultValue>
                <ns1:id>36278</ns1:id>
                <ns1:name>SQL_LOGFILEPATH</ns1:name>
                <ns1:encrypted>false</ns1:encrypted>
                <ns1:overridable>true</ns1:overridable>
                <ns1:propertyType>
                    <ns1:name>string-any</ns1:name>
                    <ns1:href>/propertytype/4</ns1:href>
                    <ns1:id>4</ns1:id>
                    <ns1:rel>up</ns1:rel>
                    <ns1:type>application/com.servicemesh.agility.api.PropertyType+xml</ns1:type>
                    <ns1:position>0</ns1:position>
                </ns1:propertyType>
                <ns1:propertyDefinition xsi:type="ns1:Link">
                    <ns1:name>SQL_LOGFILEPATH</ns1:name>
                    <ns1:href>/propertydefinition/505</ns1:href>
                    <ns1:id>505</ns1:id>
                    <ns1:rel>up</ns1:rel>
                    <ns1:type>application/com.servicemesh.agility.api.PropertyDefinition+xml</ns1:type>
                    <ns1:position>0</ns1:position>
                </ns1:propertyDefinition>
                <ns1:stringValue>J:\SQL1\LOGS1</ns1:stringValue>
            </ns1:defaultValue>
            <ns1:propertyType>
                <ns1:name>string-any</ns1:name>
                <ns1:href>propertytype/4</ns1:href>
                <ns1:id>4</ns1:id>
                <ns1:type>application/com.servicemesh.agility.api.PropertyType+xml</ns1:type>
            </ns1:propertyType>
            <ns1:assetPropertyLinkId>76acdcea-dc21-4125-97ce-f3e7cdc1b835</ns1:assetPropertyLinkId>
        </ns1:variable>
        <ns1:variable>
            <ns1:name>SQL_DATAFILEPATH</ns1:name>
            <ns1:id>1026</ns1:id>
            <ns1:description>Folder where DB Data file is stored on SQL server</ns1:description>
            <ns1:uuid>905c5e5e-031e-4796-b481-bd0a934008f9</ns1:uuid>
            <ns1:top>false</ns1:top>
            <ns1:assetPath></ns1:assetPath>
            <ns1:detailedAssetPath></ns1:detailedAssetPath>
            <ns1:lifecycleVersion>-1</ns1:lifecycleVersion>
            <ns1:removable>true</ns1:removable>
            <ns1:displayName>SQL_DATAFILEPATH</ns1:displayName>
            <ns1:readable>true</ns1:readable>
            <ns1:writable>true</ns1:writable>
            <ns1:minRequired>1</ns1:minRequired>
            <ns1:maxAllowed>1</ns1:maxAllowed>
            <ns1:validator/>
            <ns1:defaultValue>
                <ns1:id>36279</ns1:id>
                <ns1:name>SQL_DATAFILEPATH</ns1:name>
                <ns1:encrypted>false</ns1:encrypted>
                <ns1:overridable>true</ns1:overridable>
                <ns1:propertyType>
                    <ns1:name>string-any</ns1:name>
                    <ns1:href>/propertytype/4</ns1:href>
                    <ns1:id>4</ns1:id>
                    <ns1:rel>up</ns1:rel>
                    <ns1:type>application/com.servicemesh.agility.api.PropertyType+xml</ns1:type>
                    <ns1:position>0</ns1:position>
                </ns1:propertyType>
                <ns1:propertyDefinition xsi:type="ns1:Link">
                    <ns1:name>SQL_DATAFILEPATH</ns1:name>
                    <ns1:href>/propertydefinition/506</ns1:href>
                    <ns1:id>506</ns1:id>
                    <ns1:rel>up</ns1:rel>
                    <ns1:type>application/com.servicemesh.agility.api.PropertyDefinition+xml</ns1:type>
                    <ns1:position>0</ns1:position>
                </ns1:propertyDefinition>
                <ns1:stringValue>J:\SQL1\DATA1</ns1:stringValue>
            </ns1:defaultValue>
            <ns1:propertyType>
                <ns1:name>string-any</ns1:name>
                <ns1:href>propertytype/4</ns1:href>
                <ns1:id>4</ns1:id>
                <ns1:type>application/com.servicemesh.agility.api.PropertyType+xml</ns1:type>
            </ns1:propertyType>
            <ns1:assetPropertyLinkId>54f9a1b7-f304-4269-b35d-76817d7f98d0</ns1:assetPropertyLinkId>
        </ns1:variable>
        <ns1:runOnProvisionOnly>false</ns1:runOnProvisionOnly>
    </ns1:pendingAsset>
    <ns1:pendingAsset xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="ns1:Script">
        <ns1:name>MWS2R3 - CM2012 - Common Prereqs</ns1:name>
        <ns1:id>381</ns1:id>
        <ns1:description>Reboots after running</ns1:description>
        <ns1:uuid>1f3b9b65-518c-482b-898d-5c6d7a780592</ns1:uuid>
        <ns1:assetType>
            <ns1:name>script</ns1:name>
            <ns1:href>assettype/2</ns1:href>
            <ns1:id>2</ns1:id>
            <ns1:rel>up</ns1:rel>
            <ns1:type>application/com.servicemesh.agility.api.AssetType+xml</ns1:type>
            <ns1:position>0</ns1:position>
        </ns1:assetType>
        <ns1:top>false</ns1:top>
        <ns1:assetPath>/Root/MWS2R3_SYD</ns1:assetPath>
        <ns1:detailedAssetPath>/Root:#ID#1:#TYPE#VMContainer/MWS2R3_SYD:#ID#8:#TYPE#VMProject</ns1:detailedAssetPath>
        <ns1:lifecycleVersion>-1</ns1:lifecycleVersion>
        <ns1:removable>true</ns1:removable>
        <ns1:domain>
            <ns1:name>domain1</ns1:name>
            <ns1:href>domain/1</ns1:href>
            <ns1:id>1</ns1:id>
            <ns1:rel>up</ns1:rel>
            <ns1:type>application/com.servicemesh.agility.api.Domain+xml</ns1:type>
            <ns1:position>0</ns1:position>
        </ns1:domain>
        <ns1:creator>
            <ns1:name>dridley</ns1:name>
            <ns1:href>user/12</ns1:href>
            <ns1:id>12</ns1:id>
            <ns1:rel>up</ns1:rel>
            <ns1:type>application/com.servicemesh.agility.api.User+xml</ns1:type>
            <ns1:position>0</ns1:position>
        </ns1:creator>
        <ns1:created>2015-06-22T17:35:09+10:00</ns1:created>
        <ns1:lockType>0</ns1:lockType>
        <ns1:lastModified>2015-06-22T17:36:02+10:00</ns1:lastModified>
        <ns1:parent>
            <ns1:name>MWS2R3_SYD</ns1:name>
            <ns1:href>project/8</ns1:href>
            <ns1:id>8</ns1:id>
            <ns1:rel>up</ns1:rel>
            <ns1:type>application/com.servicemesh.agility.api.Project+xml</ns1:type>
            <ns1:position>0</ns1:position>
        </ns1:parent>
        <ns1:slot>b7183694-3aa8-48bd-9887-4ee0afe71f74</ns1:slot>
        <ns1:version>2</ns1:version>
        <ns1:latest>false</ns1:latest>
        <ns1:publishComment></ns1:publishComment>
        <ns1:slotId>191</ns1:slotId>
        <ns1:publisher>
            <ns1:name>dridley</ns1:name>
            <ns1:href>user/12</ns1:href>
            <ns1:id>12</ns1:id>
            <ns1:rel>up</ns1:rel>
            <ns1:type>application/com.servicemesh.agility.api.User+xml</ns1:type>
            <ns1:position>0</ns1:position>
        </ns1:publisher>
        <ns1:versionStatus>active</ns1:versionStatus>
        <ns1:checkoutAllowed>false</ns1:checkoutAllowed>
        <ns1:headAllowed>false</ns1:headAllowed>
        <ns1:operatingSystem>Windows</ns1:operatingSystem>
        <ns1:enableExtensions>false</ns1:enableExtensions>
        <ns1:body># Load Common functions
. .\Logging.ps1
. .\GlobalRepository.ps1
. .\LaunchProcess.ps1
. .\FilesUtility.ps1
. .\PlatformUtils.ps1
. .\UsersUtility.ps1


# get current script location
$scriptPath = split-path -parent $MyInvocation.MyCommand.Definition
$scriptName = $MyInvocation.MyCommand.Name
 
ConfigureLogging $scriptPath $scriptName
 
#########################################################################
# Main
#########################################################################
 
#Use ArgList variable in Start-Process commands so embedded variables and env variables resolve
#START.exe is used with msiexec otherwise it does not wait

$DomainFQDN =			(get-globalvariable(&quot;Global\DomainFQDN&quot;)).value
$DomainNetBIOS = 		(get-globalvariable(&quot;Global\DomainNetBIOS&quot;)).value
$DomainDN = 			(get-globalvariable(&quot;AD\DistinguishedName&quot;)).value
$ServiceAccountName = 	&quot;$DomainNetBIOS\$CM_SERVICEACCOUNT&quot;										# Svc account not set as a local env variable yet so need to reference BluePrint variable
$ServiceAccountPwd = 	get-serviceAccountPassword -username $CM_SERVICEACCOUNT.ToLower()		# Covert to lowercase as get-serviceAccountPassword function is case sensitive
$ADPermissionsDN = 		&quot;OU=Permissions,OU=Administration,$DomainDN&quot;
$ADRolesDN = 			&quot;OU=Roles,OU=Administration,$DomainDN&quot;
$PShEXE = 					&quot;$PSHome\Powershell.exe&quot;

If ($DomainFQDN -eq $NULL) 			{Write-Host 'ERROR: $DomainFQDN not defined'; EXIT 1}
If ($DomainNetBIOS -eq $NULL) 		{Write-Host 'ERROR: $DomainNetBIOS not defined'; EXIT 1}
If ($DomainDN -eq $NULL) 			{Write-Host 'ERROR: $DomainDN not defined'; EXIT 1}
If ($ServiceAccountName -eq $NULL) 	{Write-Host 'ERROR: $ServiceAccountName not defined'; EXIT 1}
If ($ServiceAccountPwd -eq $NULL) 	{Write-Host 'ERROR: $ServiceAccountPwd not defined'; EXIT 1}


Log &quot;**** Starting: Common Pre-Reqs Config... ****&quot;
Log &quot;`n&quot;


Log &quot;Copy required content locally...&quot;		# Will be copied to C:\Users\&lt;profile&gt;
Get-AppFiles &quot;PC Devices\System Center\Server Provisioning\Common&quot;
Get-AppFiles &quot;PC Devices\Misc\Microsoft .NET&quot;
Get-AppFiles &quot;PC Devices\Misc\Windows Features&quot;
If ($env:CM_SITECODE) {Get-AppFiles &quot;PC Devices\System Center\Server Provisioning\Primary&quot;}
Log &quot;`n&quot;


Log &quot;Set Common Environment Variables...&quot;
SETX CM_ServiceAccount $CM_SERVICEACCOUNT /M
Log &quot;`n&quot;


Log &quot;Set Timezone...&quot;
tzutil /s &quot;$OS_TIMEZONE&quot;
If ($LastExitCode -ne 0) {Log &quot;ERROR: Timezone could not be set. Possibly due to inability to enumerate variables.&quot;; EXIT 1}
Log &quot;`n&quot;


Log &quot;Copy CMTrace.exe... &quot;
If (!(Test-Path &quot;$env:ProgramFiles\CMTrace&quot;)) {MD &quot;$env:ProgramFiles\CMTrace&quot;}
Copy-Item &quot;$ScriptPath\ConfigMgr\CMTrace\CMTrace.exe&quot; &quot;$env:ProgramFiles\CMTrace\&quot; -Force
Log &quot;`n&quot;


Log &quot;Defining Windows Firewall Ports...&quot;
Start-Process -NoNewWindow -Wait -PassThru -FilePath &quot;$ScriptPath\ConfigMgr\Scripts\Windows Firewall\CM2012-Windows Firewall.cmd&quot;
Log &quot;`n&quot;


# Install Windows Roles and Features
Log &quot;Installing Windows 2012 Roles (.NET 3.5 - includes .NET 2.0 and 3.0)...&quot;			# .NET 4.0 is already included in the Server SOE
Log &quot;    **KB2966828  |  .NET 3.5 prereq on Win2012 as per KB3005628&quot;
CMD /c Start /WAIT WUSA.exe &quot;$ScriptPath\WindowsFeatures_Prereq\Windows8.1-KB2966828-x64.msu&quot; /quiet /norestart /log:&quot;$env:windir\Debug\ConfigMgr2012\$env:Computername\$env:computername-KB3005628.log&quot;
Log &quot;    **.NET 3.5&quot;
$Feature = Install-WindowsFeature -Name NET-Framework-Core -Source &quot;$ScriptPath\WindowsFeatures_Prereq\sxs&quot; -LogPath &quot;$env:windir\Debug\ConfigMgr2012\$env:Computername\$env:computername-Roles_.NET3.5.log&quot;		# Source switch used for .NET 3.5 only
If (!($Feature.Success)) {Log &quot;ERROR: Failed to install Windows Roles and Features. Exiting...&quot;; EXIT 1}
Log &quot;`n&quot;

Log &quot;Installing Windows 2012 Roles (IIS)...&quot;
$Feature = Install-WindowsFeature -Name Web-Default-Doc,Web-Dir-Browsing,Web-Http-Errors,Web-Static-Content,Web-Http-Redirect,Web-Health,Web-Performance,Web-Filtering,Web-Basic-Auth,Web-IP-Security,Web-Url-Auth,Web-Windows-Auth,Web-Net-Ext,Web-Net-Ext45,Web-ASP,Web-ASP-Net,Web-ASP-Net45,Web-ISAPI-Ext,Web-ISAPI-Filter,Web-Mgmt-Console,Web-Metabase,Web-Lgcy-Scripting,Web-WMI,Web-Scripting-Tools,Web-Mgmt-Service -LogPath &quot;$env:windir\Debug\ConfigMgr2012\$env:Computername\$env:computername-Roles_IIS.log&quot;
If (!($Feature.Success)) {Log &quot;ERROR: Failed to install Windows Roles and Features. Exiting...&quot;; EXIT 1}
Log &quot;`n&quot;

Log &quot;Installing Windows 2012 Roles (WDS)...&quot;
$Feature = Install-WindowsFeature -Name WDS -LogPath &quot;$env:windir\Debug\ConfigMgr2012\$env:Computername\$env:computername-Roles_WDS.log&quot;
If (!($Feature.Success)) {Log &quot;ERROR: Failed to install Windows Roles and Features. Exiting...&quot;; EXIT 1}
Log &quot;`n&quot;

Log &quot;Installing Windows 2012 Features (BITS, BranchCache, GPMC, RDC, AD Psh Modules, AD Tools, Share &amp; Storage Mgt, File Resource Mgr)...&quot;
$Feature = Install-WindowsFeature -Name BITS-IIS-Ext,RSAT-Bits-Server,BranchCache,GPMC,RDC,RSAT-AD-PowerShell,RSAT-ADDS-Tools,RSAT-ADLDS,RSAT-CoreFile-Mgmt,FS-Resource-Manager -LogPath &quot;$env:windir\Debug\ConfigMgr2012\$env:Computername\$env:computername-Features.log&quot;
If (!($Feature.Success)) {Log &quot;ERROR: Failed to install Windows Roles and Features. Exiting...&quot;; EXIT 1}
Log &quot;`n&quot;
Start-Sleep -Seconds 30


Log &quot;Define local admins...&quot;		# Does not require domain credentials to run
# Note: svc account needs to be local admin prior to calling any LaunchProcessAsUser function, as it needs logon as a batch job rights
AddUserToLocalAdministrators -ServerName &quot;$env:Computername&quot; -UserName &quot;$ServiceAccountName&quot;
If (!(net LocalGroup Administrators | Select-String -Pattern $CM_SERVICEACCOUNT)) {&quot;ERROR: $ServiceAccountName could not be added to local admins&quot;; EXIT 1}			# Validate local admin

net user /add PCDevices_Admin PCdevices@dmin											# Create local account
AddUserToLocalAdministrators -ServerName &quot;$env:Computername&quot; -UserName &quot;$env:Computername\PCDevices_Admin&quot;
Log &quot;`n&quot;


If ($env:CM_SITECODE)							# If Primary server is being stood up, then create AD objects. Needs to be done in this script as it's a prereq to subsequent AD group membership tasks
{
    Log &quot;Current server is detected as a Primary server...&quot;
    Log &quot;    ** Copy required Primary content locally...&quot;				# Will be copied to C:\Users\&lt;profile&gt;
            
    Log &quot;    ** Creating AD Objects&quot;
    # Modify PS1 file
    $PS1File = &quot;$ScriptPath\ConfigMgr\Scripts\CM2012-AD Object-Creation.ps1&quot;
	(Get-Content $PS1File) | ForEach-Object { $_ -replace &quot;DomainNetBIOS =.*&quot; ,		&quot;DomainNetBIOS = `&quot;$DomainNetBIOS`&quot;&quot; }		| Set-Content $PS1File
    (Get-Content $PS1File) | ForEach-Object { $_ -replace &quot;DomainDN =.*&quot; ,			&quot;DomainDN = `&quot;$DomainDN`&quot;&quot; }				| Set-Content $PS1File
	(Get-Content $PS1File) | ForEach-Object { $_ -replace &quot;ADPermissionsDN =.*&quot; ,	&quot;ADPermissionsDN = `&quot;$ADPermissionsDN`&quot;&quot; }	| Set-Content $PS1File
	(Get-Content $PS1File) | ForEach-Object { $_ -replace &quot;ADRolesDN =.*&quot; ,			&quot;ADRolesDN = `&quot;$ADRolesDN`&quot;&quot; }				| Set-Content $PS1File

	# Run PS1 file using svc account credentials
	$ArgList = &quot;-file `&quot;$PS1File`&quot;&quot;
	$ret = LaunchProcessAsUser &quot;$PShEXE&quot; $ArgList $ServiceAccountName $ServiceAccountPwd		# Needs to run %COMSPEC% as Powershell.exe was not found and is looking for absolute path
    If ($ret -ne 0 -And $ret -ne 3010) {Log &quot;ERROR: Exitcode = $ret. Failed to create AD objects. Exiting...&quot;; EXIT 1}
    Log &quot;`n&quot;
   
}
Else
{
	Log &quot;Current server is NOT detected as a Primary server. Assuming AD accounts and groups have already been created. Continuing...&quot;
    Log &quot;`n&quot;
}


Log &quot;Define AD group membership...&quot;
$PS1File = &quot;$ScriptPath\ConfigMgr\Scripts\CM2012-AD Group-Membership.ps1&quot;			# Define AD group membership prereqs. Needs to run under svc account
(Get-Content $PS1File) | ForEach-Object { $_ -replace &quot;DomainNetBIOS =.*&quot; ,		&quot;DomainNetBIOS = `&quot;$DomainNetBIOS`&quot;&quot; }		| Set-Content $PS1File
(Get-Content $PS1File) | ForEach-Object { $_ -replace &quot;ADRolesDN =.*&quot; ,			&quot;ADRolesDN = `&quot;$ADRolesDN`&quot;&quot; }				| Set-Content $PS1File
$ArgList = &quot;-file `&quot;$PS1File`&quot;&quot;
$ret = LaunchProcessAsUser &quot;$PShEXE&quot; $ArgList $ServiceAccountName $ServiceAccountPwd		# Needs to run %COMSPEC% as Powershell.exe was not found and is looking for absolute path
If ($ret -ne 0 -And $ret -ne 3010) {Log &quot;ERROR: Exitcode = $ret. Failed to define AD group membership. Exiting...&quot;; EXIT 1}
Log &quot;`n&quot;


Log &quot;Define Additional Local Admins...&quot;		# Does not require domain credentials to run
AddUserToLocalAdministrators -ServerName &quot;$env:Computername&quot; -UserName &quot;$DomainNetBIOS\ROLE-SCCM-Servers&quot;
If (!(net LocalGroup Administrators | Select-String -Pattern ROLE-SCCM-Servers)) {&quot;ERROR: ROLE-SCCM-Servers could not be added to local admins&quot;; EXIT 1}			# Validate local admin

AddUserToLocalAdministrators -ServerName &quot;$env:Computername&quot; -UserName &quot;$DomainNetBIOS\DEL-G-CSC Infrastructure Services&quot;
Log &quot;`n&quot;


Log &quot;Installing .NET 4.5.2...&quot;
&lt;#
	# Needs to run as Scheduled Task under local admin (not necessarily under domain account) otherwise access is denied after extracting EXE (not sure why)
    # Therefore, needs to run after svc account is added to local admins
#&gt;
$ArgList = &quot;/q /norestart /log `&quot;$env:windir\Debug\ConfigMgr2012\$env:Computername\$env:computername-.NET4.5.2.log`&quot;&quot;
$ret = LaunchProcessAsUser &quot;$ScriptPath\Microsoft .NET 4.5.2\NDP452-KB2901907-x86-x64-AllOS-ENU.exe&quot; $ArgList $ServiceAccountName $ServiceAccountPwd
If ($ret -ne 0 -And $ret -ne 3010) {Log &quot;ERROR: Exitcode = $ret.exitcode. Failed to install .NET 4.5.2. Exiting...&quot;; EXIT 1}
Log &quot;`n&quot;    


Log &quot;Defining Drive Letters that ConfigMgr can use...&quot;
$disks = gwmi win32_logicaldisk -Filter &quot;DriveType='3'&quot;
ForEach ($id in $disks.DeviceID)
{
	If ($id -ne &quot;F:&quot;) {New-Item $id\NO_SMS_ON_DRIVE.sms -Type file -Force}
}
Log &quot;`n&quot;


Log &quot;Creating IIS Cleanup Task...&quot;
Start-Process -NoNewWindow -Wait -PassThru -FilePath &quot;$ScriptPath\ConfigMgr\Scripts\IIS 8.5\IIS Logs-Cleanup-SchTask.cmd&quot;
Log &quot;`n&quot;


Log &quot;Creating User Profile Cleanup Task...&quot;
$SchTasks_Date = (Get-Date).AddDays(5).ToString(&quot;MM/dd/yyyy&quot;)
$ProfPath = $env:UserProfile
# Create Agility User cleanup script
echo &quot;Get-CimInstance win32_userprofile -Verbose | Where {`$_.LocalPath -eq '$ProfPath'} | Remove-CimInstance -Verbose&quot; &gt; $env:windir\Debug\ConfigMgr2012\Agility-DelProf-$env:USERNAME.ps1
SchTasks /Create /SC &quot;Once&quot; /SD $SchTasks_Date /ST 01:00 /F /RU &quot;SYSTEM&quot; /TN &quot;Agility-DelProf-$env:USERNAME&quot; /TR &quot;Powershell.exe -File '$env:windir\Debug\ConfigMgr2012\Agility-DelProf-$env:USERNAME.ps1'&quot;
Log &quot;`n&quot;

#Log &quot;Register DNS...&quot;
#ipconfig /registerdns
#Log &quot;`n&quot;

Log &quot;**** Finished: Common Pre-Reqs Config... ****&quot;</ns1:body>
        <ns1:type>Guest</ns1:type>
        <ns1:language>
            <ns1:name>powershell</ns1:name>
            <ns1:href>scriptlanguage/5</ns1:href>
            <ns1:id>5</ns1:id>
            <ns1:rel>down</ns1:rel>
            <ns1:type>application/com.servicemesh.agility.api.ScriptLanguage+xml</ns1:type>
            <ns1:position>0</ns1:position>
        </ns1:language>
        <ns1:runAsAdmin>false</ns1:runAsAdmin>
        <ns1:timeout>1800</ns1:timeout>
        <ns1:retries>0</ns1:retries>
        <ns1:delay>0</ns1:delay>
        <ns1:errorAction>Abort</ns1:errorAction>
        <ns1:rebootRequired>true</ns1:rebootRequired>
        <ns1:variable>
            <ns1:name>CM_SERVICEACCOUNT</ns1:name>
            <ns1:id>1027</ns1:id>
            <ns1:description>Service Account used to install ConfigMgr</ns1:description>
            <ns1:uuid>9122b2a8-e1c5-4d53-ab6b-99589034bd64</ns1:uuid>
            <ns1:top>false</ns1:top>
            <ns1:assetPath></ns1:assetPath>
            <ns1:detailedAssetPath></ns1:detailedAssetPath>
            <ns1:lifecycleVersion>-1</ns1:lifecycleVersion>
            <ns1:removable>true</ns1:removable>
            <ns1:displayName>CM_SERVICEACCOUNT</ns1:displayName>
            <ns1:readable>true</ns1:readable>
            <ns1:writable>true</ns1:writable>
            <ns1:minRequired>1</ns1:minRequired>
            <ns1:maxAllowed>1</ns1:maxAllowed>
            <ns1:validator/>
            <ns1:defaultValue>
                <ns1:id>36280</ns1:id>
                <ns1:name>CM_SERVICEACCOUNT</ns1:name>
                <ns1:encrypted>false</ns1:encrypted>
                <ns1:overridable>true</ns1:overridable>
                <ns1:propertyType>
                    <ns1:name>string-any</ns1:name>
                    <ns1:href>/propertytype/4</ns1:href>
                    <ns1:id>4</ns1:id>
                    <ns1:rel>up</ns1:rel>
                    <ns1:type>application/com.servicemesh.agility.api.PropertyType+xml</ns1:type>
                    <ns1:position>0</ns1:position>
                </ns1:propertyType>
                <ns1:propertyDefinition xsi:type="ns1:Link">
                    <ns1:name>CM_SERVICEACCOUNT</ns1:name>
                    <ns1:href>/propertydefinition/329</ns1:href>
                    <ns1:id>329</ns1:id>
                    <ns1:rel>up</ns1:rel>
                    <ns1:type>application/com.servicemesh.agility.api.PropertyDefinition+xml</ns1:type>
                    <ns1:position>0</ns1:position>
                </ns1:propertyDefinition>
                <ns1:stringValue>svc_SCCM_Install</ns1:stringValue>
            </ns1:defaultValue>
            <ns1:propertyType>
                <ns1:name>string-any</ns1:name>
                <ns1:href>propertytype/4</ns1:href>
                <ns1:id>4</ns1:id>
                <ns1:type>application/com.servicemesh.agility.api.PropertyType+xml</ns1:type>
            </ns1:propertyType>
            <ns1:assetPropertyLinkId>606ec98d-86a6-4394-91e9-ebd07266448b</ns1:assetPropertyLinkId>
        </ns1:variable>
        <ns1:variable>
            <ns1:name>OS_TIMEZONE</ns1:name>
            <ns1:id>1028</ns1:id>
            <ns1:description>Timezone as per &quot;TZUTIL /L&quot;</ns1:description>
            <ns1:uuid>1816e675-d845-452c-ba4f-2a449eac750a</ns1:uuid>
            <ns1:top>false</ns1:top>
            <ns1:assetPath></ns1:assetPath>
            <ns1:detailedAssetPath></ns1:detailedAssetPath>
            <ns1:lifecycleVersion>-1</ns1:lifecycleVersion>
            <ns1:removable>true</ns1:removable>
            <ns1:displayName>OS_TIMEZONE</ns1:displayName>
            <ns1:readable>true</ns1:readable>
            <ns1:writable>true</ns1:writable>
            <ns1:minRequired>1</ns1:minRequired>
            <ns1:maxAllowed>1</ns1:maxAllowed>
            <ns1:validator/>
            <ns1:defaultValue>
                <ns1:id>36281</ns1:id>
                <ns1:name>OS_TIMEZONE</ns1:name>
                <ns1:encrypted>false</ns1:encrypted>
                <ns1:overridable>true</ns1:overridable>
                <ns1:propertyType>
                    <ns1:name>string-any</ns1:name>
                    <ns1:href>/propertytype/4</ns1:href>
                    <ns1:id>4</ns1:id>
                    <ns1:rel>up</ns1:rel>
                    <ns1:type>application/com.servicemesh.agility.api.PropertyType+xml</ns1:type>
                    <ns1:position>0</ns1:position>
                </ns1:propertyType>
                <ns1:propertyDefinition xsi:type="ns1:Link">
                    <ns1:name>OS_TIMEZONE</ns1:name>
                    <ns1:href>/propertydefinition/330</ns1:href>
                    <ns1:id>330</ns1:id>
                    <ns1:rel>up</ns1:rel>
                    <ns1:type>application/com.servicemesh.agility.api.PropertyDefinition+xml</ns1:type>
                    <ns1:position>0</ns1:position>
                </ns1:propertyDefinition>
                <ns1:stringValue>AUS Eastern Standard Time</ns1:stringValue>
            </ns1:defaultValue>
            <ns1:propertyType>
                <ns1:name>string-any</ns1:name>
                <ns1:href>propertytype/4</ns1:href>
                <ns1:id>4</ns1:id>
                <ns1:type>application/com.servicemesh.agility.api.PropertyType+xml</ns1:type>
            </ns1:propertyType>
            <ns1:assetPropertyLinkId>01cf64cf-3fbf-460f-83a5-ecc7703041bb</ns1:assetPropertyLinkId>
        </ns1:variable>
        <ns1:runOnProvisionOnly>false</ns1:runOnProvisionOnly>
    </ns1:pendingAsset>
    <ns1:pendingAsset xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="ns1:Script">
        <ns1:name>MWS2R3 - CM2012 - Primary Prereqs</ns1:name>
        <ns1:id>390</ns1:id>
        <ns1:description>Delay count required as this script follows on from scripts that install Windows Features. Upon reboot Server Manager has to reinitialise.</ns1:description>
        <ns1:uuid>69d77a0d-4027-4219-8ad7-1e4db36c0d37</ns1:uuid>
        <ns1:assetType>
            <ns1:name>script</ns1:name>
            <ns1:href>assettype/2</ns1:href>
            <ns1:id>2</ns1:id>
            <ns1:rel>up</ns1:rel>
            <ns1:type>application/com.servicemesh.agility.api.AssetType+xml</ns1:type>
            <ns1:position>0</ns1:position>
        </ns1:assetType>
        <ns1:top>false</ns1:top>
        <ns1:assetPath>/Root/MWS2R3_SYD</ns1:assetPath>
        <ns1:detailedAssetPath>/Root:#ID#1:#TYPE#VMContainer/MWS2R3_SYD:#ID#8:#TYPE#VMProject</ns1:detailedAssetPath>
        <ns1:lifecycleVersion>-1</ns1:lifecycleVersion>
        <ns1:removable>true</ns1:removable>
        <ns1:domain>
            <ns1:name>domain1</ns1:name>
            <ns1:href>domain/1</ns1:href>
            <ns1:id>1</ns1:id>
            <ns1:rel>up</ns1:rel>
            <ns1:type>application/com.servicemesh.agility.api.Domain+xml</ns1:type>
            <ns1:position>0</ns1:position>
        </ns1:domain>
        <ns1:creator>
            <ns1:name>dridley</ns1:name>
            <ns1:href>user/12</ns1:href>
            <ns1:id>12</ns1:id>
            <ns1:rel>up</ns1:rel>
            <ns1:type>application/com.servicemesh.agility.api.User+xml</ns1:type>
            <ns1:position>0</ns1:position>
        </ns1:creator>
        <ns1:created>2015-07-03T12:31:11+10:00</ns1:created>
        <ns1:lockType>0</ns1:lockType>
        <ns1:lastModified>2015-07-03T12:32:41+10:00</ns1:lastModified>
        <ns1:parent>
            <ns1:name>MWS2R3_SYD</ns1:name>
            <ns1:href>project/8</ns1:href>
            <ns1:id>8</ns1:id>
            <ns1:rel>up</ns1:rel>
            <ns1:type>application/com.servicemesh.agility.api.Project+xml</ns1:type>
            <ns1:position>0</ns1:position>
        </ns1:parent>
        <ns1:slot>5cfef39d-fa59-4b8f-b28b-917fc154a46e</ns1:slot>
        <ns1:version>3</ns1:version>
        <ns1:latest>false</ns1:latest>
        <ns1:publishComment>Changed WSUS commands</ns1:publishComment>
        <ns1:slotId>184</ns1:slotId>
        <ns1:publisher>
            <ns1:name>dridley</ns1:name>
            <ns1:href>user/12</ns1:href>
            <ns1:id>12</ns1:id>
            <ns1:rel>up</ns1:rel>
            <ns1:type>application/com.servicemesh.agility.api.User+xml</ns1:type>
            <ns1:position>0</ns1:position>
        </ns1:publisher>
        <ns1:versionStatus>active</ns1:versionStatus>
        <ns1:checkoutAllowed>false</ns1:checkoutAllowed>
        <ns1:headAllowed>false</ns1:headAllowed>
        <ns1:operatingSystem>Windows</ns1:operatingSystem>
        <ns1:enableExtensions>false</ns1:enableExtensions>
        <ns1:body># Load Common functions
. .\Logging.ps1
. .\GlobalRepository.ps1
. .\LaunchProcess.ps1
. .\FilesUtility.ps1
. .\PlatformUtils.ps1

# get current script location
$scriptPath = split-path -parent $MyInvocation.MyCommand.Definition
$scriptName = $MyInvocation.MyCommand.Name
 
ConfigureLogging $scriptPath $scriptName
 
#########################################################################
# Main (Primary Server only)
#########################################################################

#Use ArgList variable in Start-Process commands so embedded variables and env variables resolve
#START.exe is used with msiexec otherwise it does not wait

$DomainFQDN =			(get-globalvariable(&quot;Global\DomainFQDN&quot;)).value
$DomainNetBIOS = 		(get-globalvariable(&quot;Global\DomainNetBIOS&quot;)).value
$DomainDN = 			(get-globalvariable(&quot;AD\DistinguishedName&quot;)).value
$ServiceAccountName = 	&quot;$DomainNetBIOS\$env:CM_ServiceAccount&quot;
$ServiceAccountPwd = 	get-serviceAccountPassword -username $env:CM_ServiceAccount.ToLower()					# Covert to lowercase as get-serviceAccountPassword function is case sensitive
$SQLServerName = 		get-computername -ComponentID $env:SQL_ComponentID -InstanceID $env:SQL_InstanceID
$PShEXE = 				&quot;$PSHome\Powershell.exe&quot;


If ($DomainFQDN -eq $NULL) 			{Write-Host 'ERROR: $DomainFQDN not defined'; EXIT 1}
If ($DomainNetBIOS -eq $NULL) 		{Write-Host 'ERROR: $DomainNetBIOS not defined'; EXIT 1}
If ($DomainDN -eq $NULL) 			{Write-Host 'ERROR: $DomainDN not defined'; EXIT 1}
If ($ServiceAccountName -eq $NULL) 	{Write-Host 'ERROR: $ServiceAccountName not defined'; EXIT 1}
If ($ServiceAccountPwd -eq $NULL) 	{Write-Host 'ERROR: $ServiceAccountPwd not defined'; EXIT 1}
If ($SQLServerName -eq $NULL)	 	{Write-Host 'ERROR: $SQLServerName not defined'; EXIT 1}


Log &quot;**** Starting: Primary Pre-Reqs Config... ****&quot;
Log &quot;`n&quot;


Log &quot;Copy required content locally&quot;		# Will be copied to C:\Users\&lt;profile&gt;
Get-AppFiles &quot;PC Devices\Misc\SQL Server\SQL Server 2012 Exp x64 SP2&quot;
If (!(Test-Path &quot;F:\ConfigMgr&quot;)) {Get-AppFiles &quot;PC Devices\System Center\Ops Repository&quot;}
Log &quot;`n&quot;


Log &quot;Check AD Group membership prereq...&quot;
$arglist = &quot;-Command `&quot;&amp; { If (!(Get-ADComputer $env:Computername -Properties MemberOf | Select -Expand Memberof | Select-String -Pattern 'ROLE-SCCM-Servers')) { EXIT 1} }`&quot;&quot;
$ret = LaunchProcessAsUser &quot;$PShEXE&quot; $arglist $ServiceAccountName $ServiceAccountPwd
If ($ret -ne 0 -And $ret -ne 3010) {Log &quot;ERROR: $ret - $env:computername is NOT a member of $DomainNetBIOS\ROLE-SCCM-Servers. Exiting...&quot;; EXIT 1}
Log &quot;`n&quot;


Log &quot;ADK for Windows 8.1...&quot;
$arglist = &quot;/features OptionID.DeploymentTools OptionID.WindowsPreinstallationEnvironment OptionID.UserStateMigrationTool /installpath C:\WindowsKits\8.1 /quiet /norestart /ceip off /log $env:windir\Debug\ConfigMgr2012\$env:Computername\$env:computername-ADK.log&quot;
$ret = Start-Process -NoNewWindow -Wait -PassThru -FilePath &quot;$ScriptPath\ConfigMgr\ADK for Win8.1\adksetup.exe&quot; -ArgumentList $arglist
If ($ret.exitcode -ne 0 -And $ret.exitcode -ne 3010) {Log &quot;ERROR: $ret - Failed to install ADK. Exiting...&quot;; EXIT 1}
Start-Sleep -Seconds 300
Log &quot;`n&quot;


Log &quot;Report Viewer 2012...&quot;		#Used for launching reports from CM2012 console
Log &quot;    **Running CLR Types**&quot;
CMD /c Start /WAIT msiexec /i &quot;$ScriptPath\ConfigMgr\Microsoft Report Viewer\Microsoft Report Viewer 2012\SQLSysClrTypes.msi&quot; /qn /norestart /log $env:windir\Debug\ConfigMgr2012\$env:Computername\$env:computername-ReportViewer_SQLSysClrTypes.log
If ($LastExitCode -ne 0 -And $LastExitCode -ne 3010) {Log &quot;ERROR: $LastExitCode Failed to install Report Viewer CLR Types. Exiting...&quot;; EXIT 1}
Start-Sleep -Seconds 30
Log &quot;    **Running Report Viewer MSI**&quot;
CMD /c Start /WAIT msiexec /i &quot;$ScriptPath\ConfigMgr\Microsoft Report Viewer\Microsoft Report Viewer 2012\ReportViewer.msi&quot; /qn /norestart /log $env:windir\Debug\ConfigMgr2012\$env:Computername\$env:computername-ReportViewer_MSI.log
If ($LastExitCode -ne 0 -And $LastExitCode -ne 3010) {Log &quot;ERROR: $LastExitCode Failed to install Report Viewer 2012 MSI. Exiting...&quot;; EXIT 1}
Start-Sleep -Seconds 30
Log &quot;`n&quot;


Log &quot;Microsoft SQL Server 2012 Report Builder...&quot;
CMD /c Start /WAIT msiexec /i &quot;$ScriptPath\ConfigMgr\Microsoft SQL Server Report Builder\Microsoft SQL Server 2012 Report Builder\ReportBuilder3.msi&quot; /qn /norestart /log $env:windir\Debug\ConfigMgr2012\$env:Computername\$env:computername-ReportBuilder3.log
If ($LastExitCode -ne 0 -And $LastExitCode -ne 3010) {Log &quot;ERROR: $LastExitCode Failed to install Microsoft SQL Server 2012 Report Builder. Exiting...&quot;; EXIT 1}
Start-Sleep -Seconds 30
Log &quot;`n&quot;

Log &quot;Windows 2012 Roles (WSUS)...&quot;
$Feature = Install-WindowsFeature -Name UpdateServices-Services,UpdateServices-DB -IncludeManagementTools -LogPath &quot;$env:windir\Debug\ConfigMgr2012\$env:Computername\$env:computername-Roles_WSUS.log&quot;
If (!($Feature.Success)) {Log &quot;ERROR: Failed to install WSUS Role. Exiting...&quot;; EXIT 1}
Log &quot;`n&quot;
Start-Sleep -s 120


Log &quot;Configure WSUS... (log file located under %windir%\Temp\tmpXXXX.tmp)&quot;
$arglist = &quot;postinstall SQL_INSTANCE_NAME=$SQLServerName\$env:SQL_InstanceName CONTENT_DIR=F:\WSUS&quot;			# WSUS hosted on SQL box
$ret = LaunchProcessAsUser &quot;C:\Program Files\Update Services\Tools\wsusutil.exe&quot; $arglist $ServiceAccountName $ServiceAccountPwd
If ($ret -ne 0 -And $ret -ne 3010) {Log &quot;ERROR: $ret - WSUS config failed&quot;; EXIT 1}
Log &quot;`n&quot;
Start-Sleep -s 300

Log &quot;    **WSUS is using the following DB:&quot;
reg query &quot;HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Update Services\Server\Setup&quot; /v SqlServerName
Log &quot;`n&quot;


Log &quot;Installing SCUP 2011...&quot;
CMD /c Start /WAIT MSIEXEC.exe /i &quot;$ScriptPath\ConfigMgr\Microsoft SCUP 2011\SystemCenterUpdatesPublisher.msi&quot; /qn /norestart /log $env:windir\Debug\ConfigMgr2012\$env:Computername\$env:computername-SCUP.log
If ($LastExitCode -ne 0 -And $LastExitCode -ne 3010) {Log &quot;ERROR: $LastExitCode Failed to install Microsoft SCUP 2011. Exiting...&quot;; EXIT 1}
Log &quot;`n&quot;

Log &quot;Installing MDT 2013 v6.2.5019.0...&quot;
CMD /c Start /WAIT MSIEXEC.exe /i &quot;$ScriptPath\ConfigMgr\MDT\MDT 2013 v6.2.5019.0\MicrosoftDeploymentToolkit2013_x64.msi&quot; /qn /norestart /log $env:windir\Debug\ConfigMgr2012\$env:Computername\$env:computername-MDT.log
If ($LastExitCode -ne 0 -And $LastExitCode -ne 3010) {Log &quot;ERROR: $LastExitCode Failed to install MDT 2013. Exiting...&quot;; EXIT 1}
Log &quot;`n&quot;


Log &quot;Installing SQL Server 2012 Express SP2 - Management Studio ...&quot;		# Log files located in &quot;C:\Program Files\Microsoft SQL Server\110\Setup Bootstrap\Log&quot;
$CMDfile = &quot;$ScriptPath\SQLManagementStudio_x64_ENU\_MS SQL 2012 Exp SP2 x64_MgtStudioOnly.cmd&quot;
(Get-Content $CMDfile) | ForEach-Object { $_ -replace &quot;Set SQLSYSADMINACCOUNTS=.*&quot; , &quot;Set SQLSYSADMINACCOUNTS=`&quot;NT AUTHORITY\System`&quot; `&quot;$DomainNetBIOS\PERM-L-SCCM-SQLAdmins`&quot; `&quot;$ServiceAccountName`&quot;&quot; } | Set-Content $CMDfile
$arglist = &quot;/c `&quot;$CMDfile`&quot;&quot;
$ret = LaunchProcessAsUser &quot;$env:COMSPEC&quot; $arglist $ServiceAccountName $ServiceAccountPwd
If ($ret -ne 0 -And $ret -ne 3010) {Log &quot;ERROR: $ret - Failed to install SQL Server 2012 Express SP2 - Management Studio&quot;; EXIT 1}
Log &quot;`n&quot;
Start-Sleep -s 120


Log &quot;	** Configuring SQL server OS and Database Delegation&quot;				# Needs to be run after SQL Server is installed so that 'SQL-Permissions' function can work
$SQLServerName = (get-computername -ComponentID $env:SQL_ComponentID -InstanceID $env:SQL_InstanceID).ToUpper()
$PS1File = &quot;$ScriptPath\ConfigMgr\Scripts\SQL-Server Config.ps1&quot;
# Add commands to PS1File
(Get-Content $PS1File) | ForEach-Object { $_ -replace &quot;ScriptPath =.*&quot; , &quot;ScriptPath = `&quot;$ScriptPath`&quot;&quot; }					| Set-Content $PS1File
(Get-Content $PS1File) | ForEach-Object { $_ -replace &quot;SQLServerName =.*&quot; , &quot;SQLServerName = `&quot;$SQLServerName`&quot;&quot; }			| Set-Content $PS1File
(Get-Content $PS1File) | ForEach-Object { $_ -replace &quot;DomainFQDN =.*&quot; , &quot;DomainFQDN = `&quot;$DomainFQDN`&quot;&quot; }					| Set-Content $PS1File
(Get-Content $PS1File) | ForEach-Object { $_ -replace &quot;DomainNetBIOS =.*&quot; , &quot;DomainNetBIOS = `&quot;$DomainNetBIOS`&quot;&quot; }			| Set-Content $PS1File
    
# Run PS1 file using svc account credentials
$ArgList = &quot;-file `&quot;$PS1File`&quot;&quot;
$ret = LaunchProcessAsUser &quot;$PShEXE&quot; $ArgList $ServiceAccountName $ServiceAccountPwd		# Needs to run %COMSPEC% as Powershell.exe was not found and is looking for absolute path
If ($ret -ne 0 -And $ret -ne 3010) {Log &quot;ERROR: $ret - SQL delegation failed&quot;; EXIT 1}
Log &quot;`n&quot;

Log &quot;Create Source Repository to house content...&quot;
If (!(Test-Path &quot;F:\ConfigMgr&quot;))
{
	$tmp = robocopy &quot;$ScriptPath\ConfigMgr_Share&quot; &quot;F:\ConfigMgr&quot; /move /s /e /r:5 /w:10 /np /njh
    Log &quot;INFO: Exitcode $LastExitCode - Creating Source Repository&quot;							# Robocopy exitcodes less that 7 are considered non-fatal.
}
Else
{
	Log &quot;F:\ConfigMgr already exists. Please update manually if still required.&quot;
}


Log &quot;**** Finished: Primary Pre-Reqs Config... ****&quot;</ns1:body>
        <ns1:type>Guest</ns1:type>
        <ns1:language>
            <ns1:name>powershell</ns1:name>
            <ns1:href>scriptlanguage/5</ns1:href>
            <ns1:id>5</ns1:id>
            <ns1:rel>down</ns1:rel>
            <ns1:type>application/com.servicemesh.agility.api.ScriptLanguage+xml</ns1:type>
            <ns1:position>0</ns1:position>
        </ns1:language>
        <ns1:runAsAdmin>false</ns1:runAsAdmin>
        <ns1:timeout>3600</ns1:timeout>
        <ns1:retries>0</ns1:retries>
        <ns1:delay>300</ns1:delay>
        <ns1:errorAction>Abort</ns1:errorAction>
        <ns1:rebootRequired>true</ns1:rebootRequired>
        <ns1:runOnProvisionOnly>false</ns1:runOnProvisionOnly>
    </ns1:pendingAsset>
    <ns1:pendingAsset xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="ns1:Script">
        <ns1:name>MWS2R3 - CM2012 - Primary Install</ns1:name>
        <ns1:id>373</ns1:id>
        <ns1:description></ns1:description>
        <ns1:uuid>43e82a13-db77-4521-abd2-9c5ec7a24174</ns1:uuid>
        <ns1:assetType>
            <ns1:name>script</ns1:name>
            <ns1:href>assettype/2</ns1:href>
            <ns1:id>2</ns1:id>
            <ns1:rel>up</ns1:rel>
            <ns1:type>application/com.servicemesh.agility.api.AssetType+xml</ns1:type>
            <ns1:position>0</ns1:position>
        </ns1:assetType>
        <ns1:top>false</ns1:top>
        <ns1:assetPath>/Root/MWS2R3_SYD</ns1:assetPath>
        <ns1:detailedAssetPath>/Root:#ID#1:#TYPE#VMContainer/MWS2R3_SYD:#ID#8:#TYPE#VMProject</ns1:detailedAssetPath>
        <ns1:lifecycleVersion>-1</ns1:lifecycleVersion>
        <ns1:removable>true</ns1:removable>
        <ns1:domain>
            <ns1:name>domain1</ns1:name>
            <ns1:href>domain/1</ns1:href>
            <ns1:id>1</ns1:id>
            <ns1:rel>up</ns1:rel>
            <ns1:type>application/com.servicemesh.agility.api.Domain+xml</ns1:type>
            <ns1:position>0</ns1:position>
        </ns1:domain>
        <ns1:creator>
            <ns1:name>dridley</ns1:name>
            <ns1:href>user/12</ns1:href>
            <ns1:id>12</ns1:id>
            <ns1:rel>up</ns1:rel>
            <ns1:type>application/com.servicemesh.agility.api.User+xml</ns1:type>
            <ns1:position>0</ns1:position>
        </ns1:creator>
        <ns1:created>2015-06-22T17:22:35+10:00</ns1:created>
        <ns1:lockType>0</ns1:lockType>
        <ns1:lastModified>2015-06-22T17:27:38+10:00</ns1:lastModified>
        <ns1:parent>
            <ns1:name>MWS2R3_SYD</ns1:name>
            <ns1:href>project/8</ns1:href>
            <ns1:id>8</ns1:id>
            <ns1:rel>up</ns1:rel>
            <ns1:type>application/com.servicemesh.agility.api.Project+xml</ns1:type>
            <ns1:position>0</ns1:position>
        </ns1:parent>
        <ns1:slot>14d7f990-5bd4-4c30-961f-a4402c4a1e23</ns1:slot>
        <ns1:version>2</ns1:version>
        <ns1:latest>false</ns1:latest>
        <ns1:publishComment></ns1:publishComment>
        <ns1:slotId>187</ns1:slotId>
        <ns1:publisher>
            <ns1:name>dridley</ns1:name>
            <ns1:href>user/12</ns1:href>
            <ns1:id>12</ns1:id>
            <ns1:rel>up</ns1:rel>
            <ns1:type>application/com.servicemesh.agility.api.User+xml</ns1:type>
            <ns1:position>0</ns1:position>
        </ns1:publisher>
        <ns1:versionStatus>active</ns1:versionStatus>
        <ns1:checkoutAllowed>false</ns1:checkoutAllowed>
        <ns1:headAllowed>false</ns1:headAllowed>
        <ns1:operatingSystem>Windows</ns1:operatingSystem>
        <ns1:enableExtensions>false</ns1:enableExtensions>
        <ns1:body># Load Common functions
. .\Logging.ps1
. .\GlobalRepository.ps1
. .\LaunchProcess.ps1
. .\FilesUtility.ps1
. .\PlatformUtils.ps1


# get current script location
$scriptPath = split-path -parent $MyInvocation.MyCommand.Definition
$scriptName = $MyInvocation.MyCommand.Name
 
ConfigureLogging $scriptPath $scriptName
 
#########################################################################
# Main
#########################################################################

#Use ArgList variable in Start-Process commands so embedded variables and env variables resolve
#START.exe is used with msiexec otherwise it does not wait

$DomainFQDN =			(get-globalvariable(&quot;Global\DomainFQDN&quot;)).value
$DomainNetBIOS = 		(get-globalvariable(&quot;Global\DomainNetBIOS&quot;)).value
$ServiceAccountName = 	&quot;$DomainNetBIOS\$env:CM_ServiceAccount&quot;
$ServiceAccountPwd = 	get-serviceAccountPassword -username $env:CM_ServiceAccount.ToLower()		#Covert to lowercase as get-serviceAccountPassword function is case sensitive
$SQLServerName = 		(get-computername -ComponentID $env:SQL_ComponentID -InstanceID $env:SQL_InstanceID).ToUpper()
$ComputerName =			$env:ComputerName.ToUpper()
$PShEXE = 				&quot;$PSHome\Powershell.exe&quot;


If ($DomainFQDN -eq $NULL) 			{Write-Host 'ERROR: $DomainFQDN not defined'; EXIT 1}
If ($DomainNetBIOS -eq $NULL) 		{Write-Host 'ERROR: $DomainNetBIOS not defined'; EXIT 1}
If ($ServiceAccountName -eq $NULL) 	{Write-Host 'ERROR: $ServiceAccountName not defined'; EXIT 1}
If ($ServiceAccountPwd -eq $NULL) 	{Write-Host 'ERROR: $ServiceAccountPwd not defined'; EXIT 1}
If ($SQLServerName -eq $NULL) 		{Write-Host 'ERROR: $SQLServerName not defined'; EXIT 1}


Log &quot;**** Starting: Primary Install... ****&quot;
Log &quot;`n&quot;


Log &quot;Start Scheduled Task to monitor SQL Cluster services...&quot;		# Will restart the services if stopped by CM2012. A known issue when installing certificates on each node, where the services are not restarted
$arglist = &quot;/c SCHTASKS.exe /Run /S `&quot;$env:SQL_ActiveNode`&quot; /TN `&quot;Monitor SQL Cluster`&quot; /I&quot;
$ret = LaunchProcessAsUser &quot;$env:ComSpec&quot; $arglist $ServiceAccountName $ServiceAccountPwd
If ($ret -ne 0) {Log &quot;ERROR: $ret - Could not run remote Scheduled Task on $env:SQL_ActiveNode&quot;; EXIT 1}
Log &quot;`n&quot;


Log &quot;Update ConfigMgr 2012 Primary Unattend file...&quot;
$INIFile = &quot;$env:windir\Debug\ConfigMgr2012\$env:Computername\Unattend_$env:Computername.ini&quot;
Copy-Item &quot;$ScriptPath\ConfigMgr\Scripts\Unattend_Template_PRI.ini&quot; $INIFile -Force
(Get-Content $INIFile) | ForEach-Object { $_ -replace &quot;SiteCode=.*&quot; , 			&quot;SiteCode=$env:CM_SiteCode&quot; } 								| Set-Content $INIFile
(Get-Content $INIFile) | ForEach-Object { $_ -replace &quot;SiteName=.*&quot; , 			&quot;SiteName=$env:CM_SiteDescription&quot; } 						| Set-Content $INIFile
(Get-Content $INIFile) | ForEach-Object { $_ -replace &quot;SMSInstallDir=.*&quot; , 		&quot;SMSInstallDir=$env:CM_SMSInstallDir&quot; } 					| Set-Content $INIFile
(Get-Content $INIFile) | ForEach-Object { $_ -replace &quot;SDKServer=.*&quot; , 			&quot;SDKServer=$ComputerName.$DomainFQDN&quot; } 					| Set-Content $INIFile
(Get-Content $INIFile) | ForEach-Object { $_ -replace &quot;PrerequisitePath=.*&quot; ,	&quot;PrerequisitePath=$ScriptPath\ConfigMgr\ConfigMgr 2012\ConfigMgr 2012 R2_Prereqs&quot; }	| Set-Content $INIFile
(Get-Content $INIFile) | ForEach-Object { $_ -replace &quot;ManagementPoint=.*&quot; , 	&quot;ManagementPoint=$ComputerName.$DomainFQDN&quot; } 				| Set-Content $INIFile
(Get-Content $INIFile) | ForEach-Object { $_ -replace &quot;DistributionPoint=.*&quot; , 	&quot;DistributionPoint=$ComputerName.$DomainFQDN&quot; } 			| Set-Content $INIFile
(Get-Content $INIFile) | ForEach-Object { $_ -replace &quot;SQLServerName=.*&quot; , 		&quot;SQLServerName=$SQLServerName.$DomainFQDN&quot; } 				| Set-Content $INIFile
(Get-Content $INIFile) | ForEach-Object { $_ -replace &quot;DatabaseName=.*&quot; , 		&quot;DatabaseName=$env:SQL_InstanceName\CM_$env:CM_SiteCode&quot; }	| Set-Content $INIFile
(Get-Content $INIFile) | ForEach-Object { $_ -replace &quot;SQLDataFilePath=.*&quot; , 	&quot;SQLDataFilePath=$env:SQL_DataFilePath&quot; } 					| Set-Content $INIFile
(Get-Content $INIFile) | ForEach-Object { $_ -replace &quot;SQLLogFilePath=.*&quot; , 	&quot;SQLLogFilePath=$env:SQL_LogFilePath&quot; } 					| Set-Content $INIFile


Log &quot;Installing ConfigMgr 2012 Primary...&quot;
$arglist = &quot;/Script $INIFile /NoUserInput&quot;
$ret = LaunchProcessAsUser &quot;$ScriptPath\ConfigMgr\ConfigMgr 2012\ConfigMgr 2012 R2 5.00.7958.1000\SMSSETUP\BIN\X64\setup.exe&quot; $arglist $ServiceAccountName $ServiceAccountPwd
If ($ret -ne 0 -And $ret -ne 3010) {Log &quot;ERROR: $ret - ConfigMgr 2012 install failed&quot;; EXIT 1}
Log &quot;`n&quot;
Start-Sleep -s 300


# Verify ConfigMgr is installed
If (!(Test-Path &quot;HKLM:\SOFTWARE\Microsoft\SMS\Components\SMS_EXECUTIVE&quot;)) {Write-Host 'ERROR: ConfigMgr install not detected!'; EXIT 1}


Log &quot;Delete Scheduled Task to monitor SQL Cluster services...&quot;
$arglist = &quot;/c SCHTASKS.exe /Delete /S `&quot;$env:SQL_ActiveNode`&quot; /TN `&quot;Monitor SQL Cluster`&quot; /F&quot;
$ret = LaunchProcessAsUser &quot;$env:ComSpec&quot; $arglist $ServiceAccountName $ServiceAccountPwd
If ($ret -ne 0) {Log &quot;ERROR: $ret - Could not delete remote Scheduled Task&quot;; EXIT 1}
Log &quot;`n&quot;


Log &quot;Installing POST ConfigMgr 2012 Updates...&quot;
Log &quot;    **KB3054451  |  CU5 for ConfigMgr 2012 R2&quot;		# Log file output to %windir%\Temp
$arglist = &quot;/Unattended /NoSQLTimeout /NoMOFTimeout&quot;
$ret = LaunchProcessAsUser &quot;$ScriptPath\ConfigMgr\Updates\ConfigMgr 2012\CU5 for ConfigMgr 2012 R2\CM12-R2CU5-KB3054451-X64-ENU.exe&quot; $arglist $ServiceAccountName $ServiceAccountPwd
If ($ret -ne 0 -And $ret -ne 3010 -And $ret -ne 3001) {Log &quot;ERROR: $ret - ConfigMgr 2012 install failed&quot;; EXIT 1}
Log &quot;`n&quot;
Start-Sleep -s 300


Log &quot;**** Finished: Primary Install... ****&quot;</ns1:body>
        <ns1:type>Guest</ns1:type>
        <ns1:language>
            <ns1:name>powershell</ns1:name>
            <ns1:href>scriptlanguage/5</ns1:href>
            <ns1:id>5</ns1:id>
            <ns1:rel>down</ns1:rel>
            <ns1:type>application/com.servicemesh.agility.api.ScriptLanguage+xml</ns1:type>
            <ns1:position>0</ns1:position>
        </ns1:language>
        <ns1:runAsAdmin>false</ns1:runAsAdmin>
        <ns1:timeout>5400</ns1:timeout>
        <ns1:retries>0</ns1:retries>
        <ns1:delay>300</ns1:delay>
        <ns1:errorAction>Abort</ns1:errorAction>
        <ns1:rebootRequired>true</ns1:rebootRequired>
        <ns1:runOnProvisionOnly>false</ns1:runOnProvisionOnly>
    </ns1:pendingAsset>
    <ns1:pendingAsset xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="ns1:Script">
        <ns1:name>MWS2R3 - AD Global Repository</ns1:name>
        <ns1:id>264</ns1:id>
        <ns1:description></ns1:description>
        <ns1:uuid>6d29211d-bc72-4a86-bf40-6ab05e05073b</ns1:uuid>
        <ns1:assetType>
            <ns1:name>script</ns1:name>
            <ns1:href>assettype/2</ns1:href>
            <ns1:id>2</ns1:id>
            <ns1:rel>up</ns1:rel>
            <ns1:type>application/com.servicemesh.agility.api.AssetType+xml</ns1:type>
            <ns1:position>0</ns1:position>
        </ns1:assetType>
        <ns1:top>false</ns1:top>
        <ns1:assetPath>/Root/MWS2R3_SYD</ns1:assetPath>
        <ns1:detailedAssetPath>/Root:#ID#1:#TYPE#VMContainer/MWS2R3_SYD:#ID#8:#TYPE#VMProject</ns1:detailedAssetPath>
        <ns1:lifecycleVersion>-1</ns1:lifecycleVersion>
        <ns1:removable>true</ns1:removable>
        <ns1:domain>
            <ns1:name>domain1</ns1:name>
            <ns1:href>domain/1</ns1:href>
            <ns1:id>1</ns1:id>
            <ns1:rel>up</ns1:rel>
            <ns1:type>application/com.servicemesh.agility.api.Domain+xml</ns1:type>
            <ns1:position>0</ns1:position>
        </ns1:domain>
        <ns1:creator>
            <ns1:name>admin</ns1:name>
            <ns1:href>user/1</ns1:href>
            <ns1:id>1</ns1:id>
            <ns1:rel>up</ns1:rel>
            <ns1:type>application/com.servicemesh.agility.api.User+xml</ns1:type>
            <ns1:position>0</ns1:position>
        </ns1:creator>
        <ns1:created>2015-05-28T10:01:28+10:00</ns1:created>
        <ns1:lockType>0</ns1:lockType>
        <ns1:lastModified>2015-05-28T10:02:43+10:00</ns1:lastModified>
        <ns1:parent>
            <ns1:name>MWS2R3_SYD</ns1:name>
            <ns1:href>project/8</ns1:href>
            <ns1:id>8</ns1:id>
            <ns1:rel>up</ns1:rel>
            <ns1:type>application/com.servicemesh.agility.api.Project+xml</ns1:type>
            <ns1:position>0</ns1:position>
        </ns1:parent>
        <ns1:slot>d049eb4d-ce47-4986-aa40-f05ae322932b</ns1:slot>
        <ns1:version>6</ns1:version>
        <ns1:latest>false</ns1:latest>
        <ns1:publishComment></ns1:publishComment>
        <ns1:slotId>123</ns1:slotId>
        <ns1:publisher>
            <ns1:name>admin</ns1:name>
            <ns1:href>user/1</ns1:href>
            <ns1:id>1</ns1:id>
            <ns1:rel>up</ns1:rel>
            <ns1:type>application/com.servicemesh.agility.api.User+xml</ns1:type>
            <ns1:position>0</ns1:position>
        </ns1:publisher>
        <ns1:versionStatus>active</ns1:versionStatus>
        <ns1:checkoutAllowed>false</ns1:checkoutAllowed>
        <ns1:headAllowed>false</ns1:headAllowed>
        <ns1:operatingSystem>Windows|2012</ns1:operatingSystem>
        <ns1:enableExtensions>false</ns1:enableExtensions>
        <ns1:body>
# Support multiple deployment environments
$environment = $ENVIRONMENT

$script = @'
Add-Type -AssemblyName System.Web

function set-globalvariable($key,$val) {
	__ENVCODE__
	Invoke-WebRequest -Method PUT -Uri http://10.3.40.5:4001/v2/keys/$($key)?value=$([System.Web.HttpUtility]::UrlEncode($($val))) -UseBasicParsing
}

function get-globalvariable($key) {
	__ENVCODE__
	$resp = Invoke-RestMethod -Method GET -Uri http://10.3.40.5:4001/v2/keys/$key
	return $resp.node
}

function get-globalvariable_json($key) {
	__ENVCODE__
	$resp = Invoke-RestMethod -Method GET -Uri http://10.3.40.5:4001/v2/keys/$key
	return ConvertFrom-Json $resp.node.value
}


function connect-deploymentshare
{
    #$share = get-globalvariable 'Global/DeploymentShare'
    #$username = get-globalvariable 'Global/DeploymentUsername'
    #$password = get-globalvariable 'Global/DeploymentPassword'
    
    #$secure_pwd = convertto-securestring $password.value -asplaintext -force
    
    #$dcred = new-object -typename System.Management.Automation.PSCredential -argumentlist $username.value, $secure_pwd
    #$d = New-PSDrive -Name 'Y' -PSProvider FileSystem -Root $share.value -Credential $dcred -Scope Global -persist 

	# [DRidley] updated to utilise dynamic drive letter 'drv' &amp; NET USE instead, as New-PSDrive always fails when run a 2nd time
	$share = 	(get-globalvariable(&quot;Global\DeploymentShare&quot;)).value
    $username = (get-globalvariable(&quot;Global\DeploymentUsername&quot;)).value
    $password = (get-globalvariable(&quot;Global\DeploymentPassword&quot;)).value
    
	$global:drv = dir function:[m-z]: -Name | Where { -Not (test-path $_ )} | select -first 1
	$d = net use $drv $share /user:$username $password
    
    #If (Test-Path $drv) {Write-Host &quot;$drv = Yes&quot;} Else {Write-Host &quot;$drv = No&quot;; EXIT}
}


function disconnect-deploymentshare
{
    #$d = Remove-PSDrive -Name 'Y'
    $d = net use $drv /delete
}


# Stiven: cater for the introduction of deploy folder subfolders as a result of introducing SVN
#         assumption is computer related folders will always and only be in the deployScript folder
function get-files($computer){
    connect-deploymentshare
    
    # Copy Common Files
    Copy-Item &quot;$drv\DeployScript\Common\*&quot; .\ -Recurse -force -Verbose
    Copy-Item &quot;$drv\DeployInstall\Common\*&quot; .\ -Recurse -force -Verbose
        
    # Copy Computer Specific files
    $c = $computer
    if( Test-Path -Path (&quot;$drv\DeployScript\&quot; + $c)){
    	$p = &quot;$drv\DeployScript\&quot; + $c + &quot;\*&quot;
    	Copy-Item $p .\ -Recurse -force -Verbose
    }else{
    	write-output &quot;computername folder does not exist - $c&quot;
    }
    
    disconnect-deploymentshare
}


function Get-AppFiles($appname){
   connect-deploymentshare

   $rootFolder = &quot;$drv\DeployScript\&quot;
   Copy-Files $rootFolder $appname

   $rootFolder = &quot;$drv\DeployInstall\&quot;
   Copy-Files $rootFolder $appname

   disconnect-deploymentshare
}

# Stiven: cater for the introduction of deploy folder subfolders as a result of introducing SVN
function Copy-Files($rootfolder, $appname){
    $p = $rootFolder + $appname + &quot;\*&quot;
    if(Test-Path -Path ($rootFolder + $appname)){
        Write-Output &quot;Copying Application files from $rootFolder$($appname)&quot;
        Copy-Item $p .\ -Recurse -force
    } Else {
        Write-Error &quot;Application folder $appname does not exist&quot; -ErrorAction SilentlyContinue
    }  
}

'@


# Perform a replace on __ENVCODE__ to support multiple AD environments
if($environment -eq $null){
	write-output &quot;Generating script for default environment&quot;
	$script = $script -replace &quot;__ENVCODE__&quot;,&quot;&quot;
}else{
	write-output &quot;Generating script for [$environment] environment&quot;
	$newstring = $('$key= &quot;[' + $environment + ']/$key&quot;')
    	$script = $script -replace &quot;__ENVCODE__&quot;,$newstring
}

$script | out-file &quot;GlobalRepository.ps1&quot;

# Load Common functions
#. .\GlobalRepository.ps1
# download common files and computer specific files
#get-files</ns1:body>
        <ns1:type>Guest</ns1:type>
        <ns1:language>
            <ns1:name>powershell</ns1:name>
            <ns1:href>scriptlanguage/5</ns1:href>
            <ns1:id>5</ns1:id>
            <ns1:rel>down</ns1:rel>
            <ns1:type>application/com.servicemesh.agility.api.ScriptLanguage+xml</ns1:type>
            <ns1:position>0</ns1:position>
        </ns1:language>
        <ns1:runAsAdmin>false</ns1:runAsAdmin>
        <ns1:timeout>3600</ns1:timeout>
        <ns1:retries>0</ns1:retries>
        <ns1:delay>0</ns1:delay>
        <ns1:errorAction>Continue</ns1:errorAction>
        <ns1:rebootRequired>false</ns1:rebootRequired>
        <ns1:variable>
            <ns1:name>ENVIRONMENT</ns1:name>
            <ns1:id>515</ns1:id>
            <ns1:description></ns1:description>
            <ns1:uuid>f91b5269-a802-4199-9abc-037cdc92f737</ns1:uuid>
            <ns1:top>false</ns1:top>
            <ns1:assetPath></ns1:assetPath>
            <ns1:detailedAssetPath></ns1:detailedAssetPath>
            <ns1:lifecycleVersion>-1</ns1:lifecycleVersion>
            <ns1:removable>true</ns1:removable>
            <ns1:displayName>ENVIRONMENT</ns1:displayName>
            <ns1:readable>true</ns1:readable>
            <ns1:writable>true</ns1:writable>
            <ns1:minRequired>0</ns1:minRequired>
            <ns1:maxAllowed>1</ns1:maxAllowed>
            <ns1:validator/>
            <ns1:propertyType>
                <ns1:name>string-any</ns1:name>
                <ns1:href>propertytype/4</ns1:href>
                <ns1:id>4</ns1:id>
                <ns1:type>application/com.servicemesh.agility.api.PropertyType+xml</ns1:type>
            </ns1:propertyType>
            <ns1:assetPropertyLinkId>d368f55d-868c-4731-9ec3-21dd29bf3625</ns1:assetPropertyLinkId>
        </ns1:variable>
        <ns1:runOnProvisionOnly>false</ns1:runOnProvisionOnly>
    </ns1:pendingAsset>
    <ns1:pendingAsset xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="ns1:Script">
        <ns1:name>MWS2R3 - CM2012 - Primary (POST Config)</ns1:name>
        <ns1:id>376</ns1:id>
        <ns1:description></ns1:description>
        <ns1:uuid>d1c9656d-5e8e-4b0e-951c-4c22dfa8942c</ns1:uuid>
        <ns1:assetType>
            <ns1:name>script</ns1:name>
            <ns1:href>assettype/2</ns1:href>
            <ns1:id>2</ns1:id>
            <ns1:rel>up</ns1:rel>
            <ns1:type>application/com.servicemesh.agility.api.AssetType+xml</ns1:type>
            <ns1:position>0</ns1:position>
        </ns1:assetType>
        <ns1:top>false</ns1:top>
        <ns1:assetPath>/Root/MWS2R3_SYD</ns1:assetPath>
        <ns1:detailedAssetPath>/Root:#ID#1:#TYPE#VMContainer/MWS2R3_SYD:#ID#8:#TYPE#VMProject</ns1:detailedAssetPath>
        <ns1:lifecycleVersion>-1</ns1:lifecycleVersion>
        <ns1:removable>true</ns1:removable>
        <ns1:domain>
            <ns1:name>domain1</ns1:name>
            <ns1:href>domain/1</ns1:href>
            <ns1:id>1</ns1:id>
            <ns1:rel>up</ns1:rel>
            <ns1:type>application/com.servicemesh.agility.api.Domain+xml</ns1:type>
            <ns1:position>0</ns1:position>
        </ns1:domain>
        <ns1:creator>
            <ns1:name>dridley</ns1:name>
            <ns1:href>user/12</ns1:href>
            <ns1:id>12</ns1:id>
            <ns1:rel>up</ns1:rel>
            <ns1:type>application/com.servicemesh.agility.api.User+xml</ns1:type>
            <ns1:position>0</ns1:position>
        </ns1:creator>
        <ns1:created>2015-06-22T17:24:29+10:00</ns1:created>
        <ns1:lockType>0</ns1:lockType>
        <ns1:lastModified>2015-06-22T17:33:39+10:00</ns1:lastModified>
        <ns1:parent>
            <ns1:name>MWS2R3_SYD</ns1:name>
            <ns1:href>project/8</ns1:href>
            <ns1:id>8</ns1:id>
            <ns1:rel>up</ns1:rel>
            <ns1:type>application/com.servicemesh.agility.api.Project+xml</ns1:type>
            <ns1:position>0</ns1:position>
        </ns1:parent>
        <ns1:slot>6f76d314-f0ee-415e-b2f5-fe9d86c3fd2c</ns1:slot>
        <ns1:version>2</ns1:version>
        <ns1:latest>false</ns1:latest>
        <ns1:publishComment></ns1:publishComment>
        <ns1:slotId>189</ns1:slotId>
        <ns1:publisher>
            <ns1:name>dridley</ns1:name>
            <ns1:href>user/12</ns1:href>
            <ns1:id>12</ns1:id>
            <ns1:rel>up</ns1:rel>
            <ns1:type>application/com.servicemesh.agility.api.User+xml</ns1:type>
            <ns1:position>0</ns1:position>
        </ns1:publisher>
        <ns1:versionStatus>active</ns1:versionStatus>
        <ns1:checkoutAllowed>false</ns1:checkoutAllowed>
        <ns1:headAllowed>false</ns1:headAllowed>
        <ns1:operatingSystem>Windows</ns1:operatingSystem>
        <ns1:enableExtensions>false</ns1:enableExtensions>
        <ns1:body># Check ConfigMgr is installed
If (!(Test-Path &quot;HKLM:\SOFTWARE\Microsoft\SMS\Components\SMS_EXECUTIVE&quot;)) {Write-Host 'ERROR: ConfigMgr install not detected!'; EXIT 1}

# Load Common functions
. .\Logging.ps1
. .\GlobalRepository.ps1
. .\LaunchProcess.ps1
. .\FilesUtility.ps1
. .\PlatformUtils.ps1


# get current script location
$scriptPath = split-path -parent $MyInvocation.MyCommand.Definition
$scriptName = $MyInvocation.MyCommand.Name
 
ConfigureLogging $scriptPath $scriptName
 
#########################################################################
# Main
#########################################################################

# Use ArgList variable in Start-Process commands so embedded variables and env variables resolve
# START.exe is used with msiexec otherwise it does not wait

$DomainFQDN =				(get-globalvariable(&quot;Global\DomainFQDN&quot;)).value
$DomainNetBIOS = 			(get-globalvariable(&quot;Global\DomainNetBIOS&quot;)).value
$ServiceAccountName = 		&quot;$DomainNetBIOS\$env:CM_ServiceAccount&quot;
$ServiceAccountPwd = 		get-serviceAccountPassword -username $env:CM_ServiceAccount.ToLower()		# Covert to lowercase as get-serviceAccountPassword function is case sensitive
$SQL_ServiceAccountName =	&quot;svc_SCCM_SQL&quot;
$SQL_ServiceAccountPwd = 	get-serviceAccountPassword -username $SQL_ServiceAccountName.ToLower()		# Covert to lowercase as get-serviceAccountPassword function is case sensitive
$SQL_ServerName = 			(get-computername -ComponentID $env:SQL_ComponentID -InstanceID $env:SQL_InstanceID).ToUpper()
$ComputerName =				$env:ComputerName.ToUpper()
$Sitecode = 				$env:CM_SiteCode
$PShEXE = 					&quot;$PSHome\Powershell.exe&quot;

If ($DomainFQDN -eq $NULL) 				{Write-Host 'ERROR: $DomainFQDN not defined'; EXIT 1}
If ($DomainNetBIOS -eq $NULL) 			{Write-Host 'ERROR: $DomainNetBIOS not defined'; EXIT 1}
If ($ServiceAccountName -eq $NULL) 		{Write-Host 'ERROR: $ServiceAccountName not defined'; EXIT 1}
If ($ServiceAccountPwd -eq $NULL) 		{Write-Host 'ERROR: $ServiceAccountPwd not defined'; EXIT 1}
If ($SQL_ServiceAccountPwd -eq $NULL) 	{Write-Host 'ERROR: $SQL_ServiceAccountPwd not defined'; EXIT 1}
If ($SQL_ServerName -eq $NULL) 			{Write-Host 'ERROR: $SQL_ServerName not defined'; EXIT 1}
If ($Sitecode -eq $NULL) 				{Write-Host 'ERROR: $Sitecode not defined'; EXIT 1}


Log &quot;**** Starting: Console Config... ****&quot;
Log &quot;`n&quot;


Log &quot;Customise ConfigMgr console...&quot;
# Modify PS1 file which configures ConfigMgr console
$PS1File = &quot;$ScriptPath\ConfigMgr\Scripts\CM2012-Console Config (PRI).ps1&quot;
(Get-Content $PS1File) | ForEach-Object { $_ -replace &quot;ScriptPath =.*&quot; ,			&quot;ScriptPath = `'$ScriptPath`'&quot; }									| Set-Content $PS1File
(Get-Content $PS1File) | ForEach-Object { $_ -replace &quot;DomainFQDN =.*&quot; ,			&quot;DomainFQDN = `'$DomainFQDN`'&quot; }									| Set-Content $PS1File
(Get-Content $PS1File) | ForEach-Object { $_ -replace &quot;DomainNetBIOS =.*&quot; ,			&quot;DomainNetBIOS = `'$DomainNetBIOS`'&quot; }								| Set-Content $PS1File
(Get-Content $PS1File) | ForEach-Object { $_ -replace &quot;SQL_ServerName =.*&quot; ,		&quot;SQL_ServerName = `'$SQL_ServerName`'&quot; }							| Set-Content $PS1File
(Get-Content $PS1File) | ForEach-Object { $_ -replace &quot;Sitecode =.*&quot; ,				&quot;Sitecode = `'$Sitecode`'&quot; }										| Set-Content $PS1File
(Get-Content $PS1File) | ForEach-Object { $_ -replace &quot;SQL_ServiceAccountName =.*&quot; ,&quot;SQL_ServiceAccountName = `'$SQL_ServiceAccountName`'&quot; }			| Set-Content $PS1File
(Get-Content $PS1File) | ForEach-Object { $_ -replace &quot;SQL_ServiceAccountPwd =.*&quot; ,	&quot;SQL_ServiceAccountPwd = `'$SQL_ServiceAccountPwd`'&quot; }				| Set-Content $PS1File		# Needs to use single quotation marks so literal characters are used
(Get-Content $PS1File) | ForEach-Object { $_ -replace &quot;SQL_ServiceName_Server =.*&quot; ,&quot;SQL_ServiceName_Server = `&quot;MSSQL```$$env:SQL_InstanceName`&quot;&quot; }		| Set-Content $PS1File		# Needs to use double quotation marks so $ sign can be used
(Get-Content $PS1File) | ForEach-Object { $_ -replace &quot;SQL_ServiceName_Agent =.*&quot; ,	&quot;SQL_ServiceName_Agent = `&quot;SQLAgent```$$env:SQL_InstanceName`&quot;&quot; }	| Set-Content $PS1File

# Run PS1 file which configures ConfigMgr console (Refer to &quot;%windir%\Debug\ConfigMgr\CM2012-Console Config (PRI).ps1_&lt;date&gt;.log&quot;)
$ArgList = &quot;-NonInteractive -NoProfile -file `&quot;$PS1File`&quot;&quot;
$ret = LaunchProcessAsUser &quot;$PShEXE&quot; $ArgList $ServiceAccountName $ServiceAccountPwd			# Needs to run %COMSPEC% as Powershell.exe was not found and is looking for absolute path

#$ArgList = &quot;`&quot;$PS1File`&quot;&quot;
#$SecPwd = ConvertTo-SecureString $ServiceAccountPwd -AsPlainText -Force
#$Creds = new-object -typename System.Management.Automation.PSCredential -argumentlist &quot;$DomainNetBIOS\$ServiceAccountName&quot;, $SecPwd
#$ret = LaunchProcessAsDomainUser -Process $ArgList -Arguments $Null -DCred $Creds

If ($ret -ne 0 -And $ret -ne 3010) {Log &quot;ERROR: Exitcode = $ret. Failed to customise ConfigMgr console. Exiting...&quot;; EXIT 1}
Log &quot;`n&quot;

Log &quot;Install ConfigMgr 2012 Configuration Pack...&quot;
$ArgList = &quot;/c Start /WAIT MSIEXEC.exe /i `&quot;$ScriptPath\ConfigMgr\ConfigMgr 2012\ConfigMgr 2012 Configuration Pack\ConfigMgr2012ConfigPack.msi`&quot; /qn /norestart /log `&quot;$env:windir\Debug\ConfigMgr2012\$env:Computername\$env:computername-CM2012 Configuration Pack.msi.log`&quot;&quot;
$ret = LaunchProcessAsUser &quot;$env:ComSpec&quot; $ArgList $ServiceAccountName $ServiceAccountPwd			# Needs to run %COMSPEC% in order to call START command
If ($ret -ne 0 -And $ret -ne 3010) {Log &quot;ERROR: Exitcode = $ret. Failed to install ConfigMgr 2012 Configuration Pack. Exiting...&quot;; EXIT 1}
Log &quot;`n&quot;

Log &quot;Install ConfigMgr 2012 Servicing Extension...&quot;
$ArgList = &quot;/c Start /WAIT MSIEXEC.exe /i `&quot;$ScriptPath\ConfigMgr\ConfigMgr 2012\ConfigMgr 2012 Servicing Extension\Configuration Manager 2012 Servicing Extension.msi`&quot; /qn /norestart /log `&quot;$env:windir\Debug\ConfigMgr2012\$env:Computername\$env:computername-CM2012 Servicing Extension.msi.log`&quot;&quot;
$ret = LaunchProcessAsUser &quot;$env:ComSpec&quot; $ArgList $ServiceAccountName $ServiceAccountPwd			# Needs to run %COMSPEC% in order to call START command
If ($ret -ne 0 -And $ret -ne 3010) {Log &quot;ERROR: Exitcode = $ret. Failed to install ConfigMgr 2012 Servicing Extension. Exiting...&quot;; EXIT 1}
Log &quot;`n&quot;

Log &quot;Install ConfigMgr 2012 Support Center...&quot;
$ArgList = &quot;/c Start /WAIT MSIEXEC.exe /i `&quot;$ScriptPath\ConfigMgr\ConfigMgr 2012\ConfigMgr 2012 Support Center\cmsupportcenter.msi`&quot; /qn /norestart /log `&quot;$env:windir\Debug\ConfigMgr2012\$env:Computername\$env:computername-CM2012 Support Center.msi.log`&quot;&quot;
$ret = LaunchProcessAsUser &quot;$env:ComSpec&quot; $ArgList $ServiceAccountName $ServiceAccountPwd			# Needs to run %COMSPEC% in order to call START command
If ($ret -ne 0 -And $ret -ne 3010) {Log &quot;ERROR: Exitcode = $ret. Failed to install ConfigMgr 2012 Support Center. Exiting...&quot;; EXIT 1}
Log &quot;`n&quot;


Log &quot;**** Finished: Console Config... ****&quot;</ns1:body>
        <ns1:type>Guest</ns1:type>
        <ns1:language>
            <ns1:name>powershell</ns1:name>
            <ns1:href>scriptlanguage/5</ns1:href>
            <ns1:id>5</ns1:id>
            <ns1:rel>down</ns1:rel>
            <ns1:type>application/com.servicemesh.agility.api.ScriptLanguage+xml</ns1:type>
            <ns1:position>0</ns1:position>
        </ns1:language>
        <ns1:runAsAdmin>false</ns1:runAsAdmin>
        <ns1:timeout>900</ns1:timeout>
        <ns1:retries>0</ns1:retries>
        <ns1:delay>300</ns1:delay>
        <ns1:errorAction>Abort</ns1:errorAction>
        <ns1:rebootRequired>false</ns1:rebootRequired>
        <ns1:runOnProvisionOnly>false</ns1:runOnProvisionOnly>
    </ns1:pendingAsset>
    <ns1:pendingAsset xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="ns1:Script">
        <ns1:name>MWS2R3 - CM2012 - Secondary Install</ns1:name>
        <ns1:id>374</ns1:id>
        <ns1:description>Needs to be triggered from PRIMARY server</ns1:description>
        <ns1:uuid>015b669c-3a0d-4e69-aba3-249920748d96</ns1:uuid>
        <ns1:assetType>
            <ns1:name>script</ns1:name>
            <ns1:href>assettype/2</ns1:href>
            <ns1:id>2</ns1:id>
            <ns1:rel>up</ns1:rel>
            <ns1:type>application/com.servicemesh.agility.api.AssetType+xml</ns1:type>
            <ns1:position>0</ns1:position>
        </ns1:assetType>
        <ns1:top>false</ns1:top>
        <ns1:assetPath>/Root/MWS2R3_SYD</ns1:assetPath>
        <ns1:detailedAssetPath>/Root:#ID#1:#TYPE#VMContainer/MWS2R3_SYD:#ID#8:#TYPE#VMProject</ns1:detailedAssetPath>
        <ns1:lifecycleVersion>-1</ns1:lifecycleVersion>
        <ns1:removable>true</ns1:removable>
        <ns1:domain>
            <ns1:name>domain1</ns1:name>
            <ns1:href>domain/1</ns1:href>
            <ns1:id>1</ns1:id>
            <ns1:rel>up</ns1:rel>
            <ns1:type>application/com.servicemesh.agility.api.Domain+xml</ns1:type>
            <ns1:position>0</ns1:position>
        </ns1:domain>
        <ns1:creator>
            <ns1:name>dridley</ns1:name>
            <ns1:href>user/12</ns1:href>
            <ns1:id>12</ns1:id>
            <ns1:rel>up</ns1:rel>
            <ns1:type>application/com.servicemesh.agility.api.User+xml</ns1:type>
            <ns1:position>0</ns1:position>
        </ns1:creator>
        <ns1:created>2015-06-22T17:23:19+10:00</ns1:created>
        <ns1:lockType>0</ns1:lockType>
        <ns1:lastModified>2015-06-22T17:27:32+10:00</ns1:lastModified>
        <ns1:parent>
            <ns1:name>MWS2R3_SYD</ns1:name>
            <ns1:href>project/8</ns1:href>
            <ns1:id>8</ns1:id>
            <ns1:rel>up</ns1:rel>
            <ns1:type>application/com.servicemesh.agility.api.Project+xml</ns1:type>
            <ns1:position>0</ns1:position>
        </ns1:parent>
        <ns1:slot>12d576d7-0770-49d1-820b-b02fd63505fa</ns1:slot>
        <ns1:version>2</ns1:version>
        <ns1:latest>false</ns1:latest>
        <ns1:publishComment></ns1:publishComment>
        <ns1:slotId>186</ns1:slotId>
        <ns1:publisher>
            <ns1:name>dridley</ns1:name>
            <ns1:href>user/12</ns1:href>
            <ns1:id>12</ns1:id>
            <ns1:rel>up</ns1:rel>
            <ns1:type>application/com.servicemesh.agility.api.User+xml</ns1:type>
            <ns1:position>0</ns1:position>
        </ns1:publisher>
        <ns1:versionStatus>active</ns1:versionStatus>
        <ns1:checkoutAllowed>false</ns1:checkoutAllowed>
        <ns1:headAllowed>false</ns1:headAllowed>
        <ns1:operatingSystem>Windows</ns1:operatingSystem>
        <ns1:enableExtensions>false</ns1:enableExtensions>
        <ns1:body>If ($CM_SECONDARY_NETBIOSNAME -eq $NULL) 	{Write-Host 'ERROR: $CM_SECONDARY_NETBIOSNAME not defined. Please set variable before running!'; EXIT 1}
If ($CM_SECONDARY_SITECODE -eq $NULL) 		{Write-Host 'ERROR: $CM_SECONDARY_SITECODE not defined. Please set variable before running!'; EXIT 1}
If ($CM_SECONDARY_DESCRIPTION -eq $NULL) 	{Write-Host 'ERROR: $CM_SECONDARY_DESCRIPTION not defined. Please set variable before running!'; EXIT 1}
If ($CM_SECONDARY_INSTALLDIR -eq $NULL) 	{Write-Host 'ERROR: $CM_SECONDARY_INSTALLDIR not defined. Please set variable before running!'; EXIT 1}


# Load Common functions
. .\GlobalRepository.ps1
# Copy Common scripts to local profile
Get-AppFiles &quot;Common&quot;

. .\Logging.ps1
. .\LaunchProcess.ps1
. .\FilesUtility.ps1
. .\PlatformUtils.ps1


# get current script location
$scriptPath = split-path -parent $MyInvocation.MyCommand.Definition
$scriptName = $MyInvocation.MyCommand.Name
 
ConfigureLogging $scriptPath $scriptName


#########################################################################
# Main
#########################################################################

#Use ArgList variable in Start-Process commands so embedded variables and env variables resolve

$DomainFQDN =			(get-globalvariable(&quot;Global\DomainFQDN&quot;)).value
$DomainNetBIOS = 		(get-globalvariable(&quot;Global\DomainNetBIOS&quot;)).value
$ServiceAccountName = 	&quot;$DomainNetBIOS\$env:CM_ServiceAccount&quot;
$ServiceAccountPwd = 	get-serviceAccountPassword -username $env:CM_ServiceAccount.ToLower()					# Covert to lowercase as get-serviceAccountPassword function is case sensitive
$PShEXE = 				&quot;$PSHome\Powershell.exe&quot;

If ($DomainFQDN -eq $NULL) 			{Write-Host 'ERROR: $DomainFQDN cannot be determined'; EXIT 1}
If ($DomainNetBIOS -eq $NULL) 		{Write-Host 'ERROR: $DomainNetBIOS cannot be determined'; EXIT 1}
If ($ServiceAccountName -eq $NULL) 	{Write-Host 'ERROR: $ServiceAccountName not defined'; EXIT 1}
If ($ServiceAccountPwd -eq $NULL) 	{Write-Host 'ERROR: $ServiceAccountPwd cannot be determined'; EXIT 1}


Log &quot;**** Starting: Secondary Install... ****&quot;
Log &quot;`n&quot;


Log &quot;Customise PS1 template for Secondary install...&quot;
# Copy Template file
Get-AppFiles &quot;PC Devices\System Center\Server Provisioning\Secondary-DP&quot;
$PS1File = &quot;$env:windir\Debug\ConfigMgr2012\Unattend_$CM_SECONDARY_NETBIOSNAME.ps1&quot;
Move-Item &quot;$ScriptPath\Unattend_Template_SEC.ps_&quot; $PS1File -Force

# Update template
$CM_SECONDARY_NETBIOSNAME = $CM_SECONDARY_NETBIOSNAME.ToUpper()
(Get-Content $PS1File) | ForEach-Object { $_ -replace &quot;SecServer_FQDNName =.*&quot; , 		&quot;SecServer_FQDNName = `&quot;$CM_SECONDARY_NETBIOSNAME.$DomainFQDN`&quot;&quot; } 	| Set-Content $PS1File
(Get-Content $PS1File) | ForEach-Object { $_ -replace &quot;SecServer_Sitecode =.*&quot; , 	&quot;SecServer_Sitecode = `&quot;$CM_SECONDARY_SITECODE`&quot;&quot; } 					| Set-Content $PS1File
(Get-Content $PS1File) | ForEach-Object { $_ -replace &quot;SecServer_Sitename =.*&quot; , 	&quot;SecServer_Sitename = `&quot;$CM_SECONDARY_DESCRIPTION`&quot;&quot; } 					| Set-Content $PS1File
(Get-Content $PS1File) | ForEach-Object { $_ -replace &quot;SecServer_InstallDir =.*&quot; , 	&quot;SecServer_InstallDir = `&quot;$CM_SECONDARY_INSTALLDIR`&quot;&quot; }					| Set-Content $PS1File
	

Log &quot;Install ConfigMgr 2012 Secondary...&quot;
$ArgList = &quot;-file $PS1File&quot;
$ret = LaunchProcessAsUser &quot;$PShEXE&quot; $ArgList $ServiceAccountName $ServiceAccountPwd			# Needs to run %COMSPEC% as Powershell.exe was not found and is looking for absolute path
If ($ret -ne 0) {Log &quot;ERROR: Exitcode = $ret. Failed to install ConfigMgr 2012 Secondary. Exiting...&quot;; EXIT 1}
Log &quot;`n&quot;


Log &quot;Creating User Profile Cleanup Task...&quot;
$SchTasks_Date = (Get-Date).AddDays(5).ToString(&quot;MM/dd/yyyy&quot;)
$ProfPath = $env:UserProfile
# Create Agility User cleanup script
echo &quot;Get-CimInstance win32_userprofile -Verbose | Where {`$_.LocalPath -eq '$ProfPath'} | Remove-CimInstance -Verbose&quot; &gt; $env:windir\Debug\ConfigMgr2012\Agility-DelProf-$env:USERNAME.ps1
SchTasks /Create /SC &quot;Once&quot; /SD $SchTasks_Date /ST 01:00 /F /RU &quot;SYSTEM&quot; /TN &quot;Agility-DelProf-$env:USERNAME&quot; /TR &quot;Powershell.exe -File '$env:windir\Debug\ConfigMgr2012\Agility-DelProf-$env:USERNAME.ps1'&quot;
Log &quot;`n&quot;


Log &quot;**** Finished: Secondary Install... ****&quot;</ns1:body>
        <ns1:type>Guest</ns1:type>
        <ns1:language>
            <ns1:name>powershell</ns1:name>
            <ns1:href>scriptlanguage/5</ns1:href>
            <ns1:id>5</ns1:id>
            <ns1:rel>down</ns1:rel>
            <ns1:type>application/com.servicemesh.agility.api.ScriptLanguage+xml</ns1:type>
            <ns1:position>0</ns1:position>
        </ns1:language>
        <ns1:runAsAdmin>false</ns1:runAsAdmin>
        <ns1:timeout>900</ns1:timeout>
        <ns1:retries>0</ns1:retries>
        <ns1:delay>300</ns1:delay>
        <ns1:errorAction>Abort</ns1:errorAction>
        <ns1:rebootRequired>true</ns1:rebootRequired>
        <ns1:variable>
            <ns1:name>CM_SECONDARY_NETBIOSNAME</ns1:name>
            <ns1:id>1014</ns1:id>
            <ns1:description>NetBIOS name of Secondary Site Server</ns1:description>
            <ns1:uuid>5bd02155-0c76-4bd5-a80a-b080f186b69c</ns1:uuid>
            <ns1:top>false</ns1:top>
            <ns1:assetPath></ns1:assetPath>
            <ns1:detailedAssetPath></ns1:detailedAssetPath>
            <ns1:lifecycleVersion>-1</ns1:lifecycleVersion>
            <ns1:removable>true</ns1:removable>
            <ns1:displayName>CM_SECONDARY_NETBIOSNAME</ns1:displayName>
            <ns1:readable>true</ns1:readable>
            <ns1:writable>true</ns1:writable>
            <ns1:minRequired>0</ns1:minRequired>
            <ns1:maxAllowed>1</ns1:maxAllowed>
            <ns1:validator/>
            <ns1:propertyType>
                <ns1:name>string-any</ns1:name>
                <ns1:href>propertytype/4</ns1:href>
                <ns1:id>4</ns1:id>
                <ns1:type>application/com.servicemesh.agility.api.PropertyType+xml</ns1:type>
            </ns1:propertyType>
            <ns1:assetPropertyLinkId>94db0a57-470b-40cb-a908-b6ae5713fcbc</ns1:assetPropertyLinkId>
        </ns1:variable>
        <ns1:variable>
            <ns1:name>CM_SECONDARY_SITECODE</ns1:name>
            <ns1:id>1015</ns1:id>
            <ns1:description>Sitecode of Secondary Site Server</ns1:description>
            <ns1:uuid>7c4e003c-31f2-432a-b65d-5ce57278d987</ns1:uuid>
            <ns1:top>false</ns1:top>
            <ns1:assetPath></ns1:assetPath>
            <ns1:detailedAssetPath></ns1:detailedAssetPath>
            <ns1:lifecycleVersion>-1</ns1:lifecycleVersion>
            <ns1:removable>true</ns1:removable>
            <ns1:displayName>CM_SECONDARY_SITECODE</ns1:displayName>
            <ns1:readable>true</ns1:readable>
            <ns1:writable>true</ns1:writable>
            <ns1:minRequired>0</ns1:minRequired>
            <ns1:maxAllowed>1</ns1:maxAllowed>
            <ns1:validator/>
            <ns1:propertyType>
                <ns1:name>string-any</ns1:name>
                <ns1:href>propertytype/4</ns1:href>
                <ns1:id>4</ns1:id>
                <ns1:type>application/com.servicemesh.agility.api.PropertyType+xml</ns1:type>
            </ns1:propertyType>
            <ns1:assetPropertyLinkId>79840694-41b3-44ab-8915-86c75e254ee0</ns1:assetPropertyLinkId>
        </ns1:variable>
        <ns1:variable>
            <ns1:name>CM_SECONDARY_DESCRIPTION</ns1:name>
            <ns1:id>1016</ns1:id>
            <ns1:description>Description of ConfigMgr server</ns1:description>
            <ns1:uuid>db48ead1-91c0-4ca3-ae76-a9f3e289058c</ns1:uuid>
            <ns1:top>false</ns1:top>
            <ns1:assetPath></ns1:assetPath>
            <ns1:detailedAssetPath></ns1:detailedAssetPath>
            <ns1:lifecycleVersion>-1</ns1:lifecycleVersion>
            <ns1:removable>true</ns1:removable>
            <ns1:displayName>CM_SECONDARY_DESCRIPTION</ns1:displayName>
            <ns1:readable>true</ns1:readable>
            <ns1:writable>true</ns1:writable>
            <ns1:minRequired>0</ns1:minRequired>
            <ns1:maxAllowed>1</ns1:maxAllowed>
            <ns1:validator/>
            <ns1:propertyType>
                <ns1:name>string-any</ns1:name>
                <ns1:href>propertytype/4</ns1:href>
                <ns1:id>4</ns1:id>
                <ns1:type>application/com.servicemesh.agility.api.PropertyType+xml</ns1:type>
            </ns1:propertyType>
            <ns1:assetPropertyLinkId>4a638b25-4809-4ac8-97f2-a41745fb04a1</ns1:assetPropertyLinkId>
        </ns1:variable>
        <ns1:variable>
            <ns1:name>CM_SECONDARY_INSTALLDIR</ns1:name>
            <ns1:id>1017</ns1:id>
            <ns1:description>Folder where ConfigMgr will be installed</ns1:description>
            <ns1:uuid>cc21afb9-1a15-45b5-b40b-9b3d6e2f39f8</ns1:uuid>
            <ns1:top>false</ns1:top>
            <ns1:assetPath></ns1:assetPath>
            <ns1:detailedAssetPath></ns1:detailedAssetPath>
            <ns1:lifecycleVersion>-1</ns1:lifecycleVersion>
            <ns1:removable>true</ns1:removable>
            <ns1:displayName>CM_SECONDARY_INSTALLDIR</ns1:displayName>
            <ns1:readable>true</ns1:readable>
            <ns1:writable>true</ns1:writable>
            <ns1:minRequired>0</ns1:minRequired>
            <ns1:maxAllowed>1</ns1:maxAllowed>
            <ns1:validator/>
            <ns1:defaultValue>
                <ns1:id>36271</ns1:id>
                <ns1:name>CM_SECONDARY_INSTALLDIR</ns1:name>
                <ns1:encrypted>false</ns1:encrypted>
                <ns1:overridable>true</ns1:overridable>
                <ns1:propertyType>
                    <ns1:name>string-any</ns1:name>
                    <ns1:href>/propertytype/4</ns1:href>
                    <ns1:id>4</ns1:id>
                    <ns1:rel>up</ns1:rel>
                    <ns1:type>application/com.servicemesh.agility.api.PropertyType+xml</ns1:type>
                    <ns1:position>0</ns1:position>
                </ns1:propertyType>
                <ns1:propertyDefinition xsi:type="ns1:Link">
                    <ns1:name>CM_SECONDARY_INSTALLDIR</ns1:name>
                    <ns1:href>/propertydefinition/348</ns1:href>
                    <ns1:id>348</ns1:id>
                    <ns1:rel>up</ns1:rel>
                    <ns1:type>application/com.servicemesh.agility.api.PropertyDefinition+xml</ns1:type>
                    <ns1:position>0</ns1:position>
                </ns1:propertyDefinition>
                <ns1:stringValue>F:\SMS_ConfigMgr</ns1:stringValue>
            </ns1:defaultValue>
            <ns1:propertyType>
                <ns1:name>string-any</ns1:name>
                <ns1:href>propertytype/4</ns1:href>
                <ns1:id>4</ns1:id>
                <ns1:type>application/com.servicemesh.agility.api.PropertyType+xml</ns1:type>
            </ns1:propertyType>
            <ns1:assetPropertyLinkId>56299064-df57-4b78-a2b5-dbfc3bbb3074</ns1:assetPropertyLinkId>
        </ns1:variable>
        <ns1:runOnProvisionOnly>false</ns1:runOnProvisionOnly>
    </ns1:pendingAsset>
    <ns1:pendingAsset xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="ns1:Script">
        <ns1:name>MWS2R3 - CM2012 - Site System Install</ns1:name>
        <ns1:id>375</ns1:id>
        <ns1:description></ns1:description>
        <ns1:uuid>f093da91-903a-47aa-8ac6-2b0298741567</ns1:uuid>
        <ns1:assetType>
            <ns1:name>script</ns1:name>
            <ns1:href>assettype/2</ns1:href>
            <ns1:id>2</ns1:id>
            <ns1:rel>up</ns1:rel>
            <ns1:type>application/com.servicemesh.agility.api.AssetType+xml</ns1:type>
            <ns1:position>0</ns1:position>
        </ns1:assetType>
        <ns1:top>false</ns1:top>
        <ns1:assetPath>/Root/MWS2R3_SYD</ns1:assetPath>
        <ns1:detailedAssetPath>/Root:#ID#1:#TYPE#VMContainer/MWS2R3_SYD:#ID#8:#TYPE#VMProject</ns1:detailedAssetPath>
        <ns1:lifecycleVersion>-1</ns1:lifecycleVersion>
        <ns1:removable>true</ns1:removable>
        <ns1:domain>
            <ns1:name>domain1</ns1:name>
            <ns1:href>domain/1</ns1:href>
            <ns1:id>1</ns1:id>
            <ns1:rel>up</ns1:rel>
            <ns1:type>application/com.servicemesh.agility.api.Domain+xml</ns1:type>
            <ns1:position>0</ns1:position>
        </ns1:domain>
        <ns1:creator>
            <ns1:name>dridley</ns1:name>
            <ns1:href>user/12</ns1:href>
            <ns1:id>12</ns1:id>
            <ns1:rel>up</ns1:rel>
            <ns1:type>application/com.servicemesh.agility.api.User+xml</ns1:type>
            <ns1:position>0</ns1:position>
        </ns1:creator>
        <ns1:created>2015-06-22T17:23:58+10:00</ns1:created>
        <ns1:lockType>0</ns1:lockType>
        <ns1:lastModified>2015-06-22T17:34:28+10:00</ns1:lastModified>
        <ns1:parent>
            <ns1:name>MWS2R3_SYD</ns1:name>
            <ns1:href>project/8</ns1:href>
            <ns1:id>8</ns1:id>
            <ns1:rel>up</ns1:rel>
            <ns1:type>application/com.servicemesh.agility.api.Project+xml</ns1:type>
            <ns1:position>0</ns1:position>
        </ns1:parent>
        <ns1:slot>abe5c099-25b7-4bad-b61f-97ad6cfbeb7b</ns1:slot>
        <ns1:version>2</ns1:version>
        <ns1:latest>false</ns1:latest>
        <ns1:publishComment></ns1:publishComment>
        <ns1:slotId>190</ns1:slotId>
        <ns1:publisher>
            <ns1:name>dridley</ns1:name>
            <ns1:href>user/12</ns1:href>
            <ns1:id>12</ns1:id>
            <ns1:rel>up</ns1:rel>
            <ns1:type>application/com.servicemesh.agility.api.User+xml</ns1:type>
            <ns1:position>0</ns1:position>
        </ns1:publisher>
        <ns1:versionStatus>active</ns1:versionStatus>
        <ns1:checkoutAllowed>false</ns1:checkoutAllowed>
        <ns1:headAllowed>false</ns1:headAllowed>
        <ns1:operatingSystem>Windows</ns1:operatingSystem>
        <ns1:enableExtensions>false</ns1:enableExtensions>
        <ns1:body>If ($CM_SITESYSTEM_NETBIOSNAME -eq $NULL) 	{Write-Host 'ERROR: $CM_SITESYSTEM_NETBIOSNAME not defined. Please set variable before running!'; EXIT 1}


# Load Common functions
. .\GlobalRepository.ps1
# Copy Common scripts to local profile
Get-AppFiles &quot;Common&quot;

. .\Logging.ps1
. .\LaunchProcess.ps1
. .\FilesUtility.ps1
. .\PlatformUtils.ps1


# get current script location
$scriptPath = split-path -parent $MyInvocation.MyCommand.Definition
$scriptName = $MyInvocation.MyCommand.Name
 
ConfigureLogging $scriptPath $scriptName


#########################################################################
# Main
#########################################################################

#Use ArgList variable in Start-Process commands so embedded variables and env variables resolve

$DomainFQDN =			(get-globalvariable(&quot;Global\DomainFQDN&quot;)).value
$DomainNetBIOS = 		(get-globalvariable(&quot;Global\DomainNetBIOS&quot;)).value
$ServiceAccountName = 	&quot;$DomainNetBIOS\$env:CM_ServiceAccount&quot;
$ServiceAccountPwd = 	get-serviceAccountPassword -username $env:CM_ServiceAccount.ToLower()					# Covert to lowercase as get-serviceAccountPassword function is case sensitive
$PShEXE = 				&quot;$PSHome\Powershell.exe&quot;

If ($DomainFQDN -eq $NULL) 			{Write-Host 'ERROR: $DomainFQDN cannot be determined'; EXIT 1}
If ($DomainNetBIOS -eq $NULL) 		{Write-Host 'ERROR: $DomainNetBIOS cannot be determined'; EXIT 1}
If ($ServiceAccountName -eq $NULL) 	{Write-Host 'ERROR: $ServiceAccountName not defined'; EXIT 1}
If ($ServiceAccountPwd -eq $NULL) 	{Write-Host 'ERROR: $ServiceAccountPwd cannot be determined'; EXIT 1}


Log &quot;**** Starting: Site System Install... ****&quot;
Log &quot;`n&quot;


Log &quot;Customise PS1 template for Site System install...&quot;
# Copy Template file
Get-AppFiles &quot;PC Devices\System Center\Server Provisioning\Secondary-DP&quot;
$PS1File = &quot;$env:windir\Debug\ConfigMgr2012\Unattend_$CM_SITESYSTEM_NETBIOSNAME.ps1&quot;
Move-Item &quot;$ScriptPath\Unattend_Template_SITESYS.ps_&quot; $PS1File -Force

# Update template
$CM_SITESYSTEM_NETBIOSNAME = $CM_SITESYSTEM_NETBIOSNAME.ToUpper()
(Get-Content $PS1File) | ForEach-Object { $_ -replace &quot;ServerFQDN =.*&quot; , 	&quot;ServerFQDN = `&quot;$CM_SITESYSTEM_NETBIOSNAME.$DomainFQDN`&quot;&quot; } | Set-Content $PS1File


Log &quot;Install ConfigMgr 2012 Site System...&quot;
$ArgList = &quot;-file $PS1File&quot;
$ret = LaunchProcessAsUser &quot;$PShEXE&quot; $ArgList $ServiceAccountName $ServiceAccountPwd
If ($ret -ne 0) {Log &quot;ERROR: Exitcode = $ret. Failed to install ConfigMgr 2012 Site System. Exiting...&quot;; EXIT 1}
Log &quot;`n&quot;


Log &quot;Creating User Profile Cleanup Task...&quot;
$SchTasks_Date = (Get-Date).AddDays(5).ToString(&quot;MM/dd/yyyy&quot;)
$ProfPath = $env:UserProfile
# Create Agility User cleanup script
echo &quot;Get-CimInstance win32_userprofile -Verbose | Where {`$_.LocalPath -eq '$ProfPath'} | Remove-CimInstance -Verbose&quot; &gt; $env:windir\Debug\ConfigMgr2012\Agility-DelProf-$env:USERNAME.ps1
SchTasks /Create /SC &quot;Once&quot; /SD $SchTasks_Date /ST 01:00 /F /RU &quot;SYSTEM&quot; /TN &quot;Agility-DelProf-$env:USERNAME&quot; /TR &quot;Powershell.exe -File '$env:windir\Debug\ConfigMgr2012\Agility-DelProf-$env:USERNAME.ps1'&quot;
Log &quot;`n&quot;


Log &quot;**** Finished: Site System Install... ****&quot;</ns1:body>
        <ns1:type>Guest</ns1:type>
        <ns1:language>
            <ns1:name>powershell</ns1:name>
            <ns1:href>scriptlanguage/5</ns1:href>
            <ns1:id>5</ns1:id>
            <ns1:rel>down</ns1:rel>
            <ns1:type>application/com.servicemesh.agility.api.ScriptLanguage+xml</ns1:type>
            <ns1:position>0</ns1:position>
        </ns1:language>
        <ns1:runAsAdmin>false</ns1:runAsAdmin>
        <ns1:timeout>900</ns1:timeout>
        <ns1:retries>0</ns1:retries>
        <ns1:delay>300</ns1:delay>
        <ns1:errorAction>Abort</ns1:errorAction>
        <ns1:rebootRequired>true</ns1:rebootRequired>
        <ns1:variable>
            <ns1:name>CM_SITESYSTEM_NETBIOSNAME</ns1:name>
            <ns1:id>1018</ns1:id>
            <ns1:description>NetBIOS name of Site System Server</ns1:description>
            <ns1:uuid>5080d3a1-0ccf-4054-83d3-a187923f6d0c</ns1:uuid>
            <ns1:top>false</ns1:top>
            <ns1:assetPath></ns1:assetPath>
            <ns1:detailedAssetPath></ns1:detailedAssetPath>
            <ns1:lifecycleVersion>-1</ns1:lifecycleVersion>
            <ns1:removable>true</ns1:removable>
            <ns1:displayName>CM_SITESYSTEM_NETBIOSNAME</ns1:displayName>
            <ns1:readable>true</ns1:readable>
            <ns1:writable>true</ns1:writable>
            <ns1:minRequired>0</ns1:minRequired>
            <ns1:maxAllowed>1</ns1:maxAllowed>
            <ns1:validator/>
            <ns1:propertyType>
                <ns1:name>string-any</ns1:name>
                <ns1:href>propertytype/4</ns1:href>
                <ns1:id>4</ns1:id>
                <ns1:type>application/com.servicemesh.agility.api.PropertyType+xml</ns1:type>
            </ns1:propertyType>
            <ns1:assetPropertyLinkId>e73c916d-e05d-41c7-885a-ab066c140f00</ns1:assetPropertyLinkId>
        </ns1:variable>
        <ns1:runOnProvisionOnly>false</ns1:runOnProvisionOnly>
    </ns1:pendingAsset>
    <ns1:pendingAsset xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="ns1:Script">
        <ns1:name>MWS2R3 - Unit Testing</ns1:name>
        <ns1:id>245</ns1:id>
        <ns1:description>Executes unit tests.</ns1:description>
        <ns1:uuid>0675c6bc-c4cc-45cf-aa6e-ed68db0d275c</ns1:uuid>
        <ns1:assetType>
            <ns1:name>script</ns1:name>
            <ns1:href>assettype/2</ns1:href>
            <ns1:id>2</ns1:id>
            <ns1:rel>up</ns1:rel>
            <ns1:type>application/com.servicemesh.agility.api.AssetType+xml</ns1:type>
            <ns1:position>0</ns1:position>
        </ns1:assetType>
        <ns1:top>false</ns1:top>
        <ns1:assetPath>/Root/MWS2R3_SYD</ns1:assetPath>
        <ns1:detailedAssetPath>/Root:#ID#1:#TYPE#VMContainer/MWS2R3_SYD:#ID#8:#TYPE#VMProject</ns1:detailedAssetPath>
        <ns1:lifecycleVersion>-1</ns1:lifecycleVersion>
        <ns1:removable>true</ns1:removable>
        <ns1:domain>
            <ns1:name>domain1</ns1:name>
            <ns1:href>domain/1</ns1:href>
            <ns1:id>1</ns1:id>
            <ns1:rel>up</ns1:rel>
            <ns1:type>application/com.servicemesh.agility.api.Domain+xml</ns1:type>
            <ns1:position>0</ns1:position>
        </ns1:domain>
        <ns1:creator>
            <ns1:name>dhatchett2</ns1:name>
            <ns1:href>user/8</ns1:href>
            <ns1:id>8</ns1:id>
            <ns1:rel>up</ns1:rel>
            <ns1:type>application/com.servicemesh.agility.api.User+xml</ns1:type>
            <ns1:position>0</ns1:position>
        </ns1:creator>
        <ns1:created>2015-05-26T22:46:49+10:00</ns1:created>
        <ns1:lockType>0</ns1:lockType>
        <ns1:lastModified>2015-05-29T14:31:28+10:00</ns1:lastModified>
        <ns1:parent>
            <ns1:name>MWS2R3_SYD</ns1:name>
            <ns1:href>project/8</ns1:href>
            <ns1:id>8</ns1:id>
            <ns1:rel>up</ns1:rel>
            <ns1:type>application/com.servicemesh.agility.api.Project+xml</ns1:type>
            <ns1:position>0</ns1:position>
        </ns1:parent>
        <ns1:slot>b9b4b1fe-d88c-4b70-8a40-7a9cbd5bf7ec</ns1:slot>
        <ns1:version>1</ns1:version>
        <ns1:latest>false</ns1:latest>
        <ns1:publishComment>R3 REL 0.2</ns1:publishComment>
        <ns1:slotId>154</ns1:slotId>
        <ns1:publisher>
            <ns1:name>sskoklev</ns1:name>
            <ns1:href>user/10</ns1:href>
            <ns1:id>10</ns1:id>
            <ns1:rel>up</ns1:rel>
            <ns1:type>application/com.servicemesh.agility.api.User+xml</ns1:type>
            <ns1:position>0</ns1:position>
        </ns1:publisher>
        <ns1:versionStatus>active</ns1:versionStatus>
        <ns1:checkoutAllowed>false</ns1:checkoutAllowed>
        <ns1:headAllowed>false</ns1:headAllowed>
        <ns1:operatingSystem>Windows</ns1:operatingSystem>
        <ns1:enableExtensions>false</ns1:enableExtensions>
        <ns1:body># Script: Unit Testing
# Author: Marina Krynina
#################################################################################################
# \USER_PROFILE
#	  \Test
#        \TestResults
#        \Logs

try
{
    $scriptPath = $env:USERPROFILE
    . .\LoggingV2.ps1 $true $scriptPath &quot;Execute-UnitTest-Server.ps1&quot;
    . .\TestFramework\Execute-UnitTest-Server.ps1 $scriptPath
    exit 0
}
catch
{
    $ex = $_.Exception | format-list | Out-String
    log &quot;ERROR: Exception occurred `nException Message: $ex&quot;

    exit 1
} 
</ns1:body>
        <ns1:type>Guest</ns1:type>
        <ns1:language>
            <ns1:name>powershell</ns1:name>
            <ns1:href>scriptlanguage/5</ns1:href>
            <ns1:id>5</ns1:id>
            <ns1:rel>down</ns1:rel>
            <ns1:type>application/com.servicemesh.agility.api.ScriptLanguage+xml</ns1:type>
            <ns1:position>0</ns1:position>
        </ns1:language>
        <ns1:runAsAdmin>false</ns1:runAsAdmin>
        <ns1:timeout>3600</ns1:timeout>
        <ns1:retries>0</ns1:retries>
        <ns1:delay>0</ns1:delay>
        <ns1:errorAction>Continue</ns1:errorAction>
        <ns1:rebootRequired>false</ns1:rebootRequired>
        <ns1:variable>
            <ns1:name>TESTSCRIPTS</ns1:name>
            <ns1:id>358</ns1:id>
            <ns1:description>&quot;;&quot; delimited string of scripts to execute. No leading &quot;\&quot;.</ns1:description>
            <ns1:uuid>c386d208-7c4a-44b4-8693-a835e80a02aa</ns1:uuid>
            <ns1:top>false</ns1:top>
            <ns1:assetPath></ns1:assetPath>
            <ns1:detailedAssetPath></ns1:detailedAssetPath>
            <ns1:lifecycleVersion>-1</ns1:lifecycleVersion>
            <ns1:removable>true</ns1:removable>
            <ns1:displayName>TESTSCRIPTS</ns1:displayName>
            <ns1:readable>true</ns1:readable>
            <ns1:writable>true</ns1:writable>
            <ns1:minRequired>0</ns1:minRequired>
            <ns1:maxAllowed>1</ns1:maxAllowed>
            <ns1:validator/>
            <ns1:defaultValue>
                <ns1:id>4289</ns1:id>
                <ns1:name>TESTSCRIPTS</ns1:name>
                <ns1:encrypted>false</ns1:encrypted>
                <ns1:overridable>true</ns1:overridable>
                <ns1:propertyType>
                    <ns1:name>string-any</ns1:name>
                    <ns1:href>/propertytype/4</ns1:href>
                    <ns1:id>4</ns1:id>
                    <ns1:rel>up</ns1:rel>
                    <ns1:type>application/com.servicemesh.agility.api.PropertyType+xml</ns1:type>
                    <ns1:position>0</ns1:position>
                </ns1:propertyType>
                <ns1:propertyDefinition xsi:type="ns1:Link">
                    <ns1:name>TESTSCRIPTS</ns1:name>
                    <ns1:href>/propertydefinition/358</ns1:href>
                    <ns1:id>358</ns1:id>
                    <ns1:rel>up</ns1:rel>
                    <ns1:type>application/com.servicemesh.agility.api.PropertyDefinition+xml</ns1:type>
                    <ns1:position>0</ns1:position>
                </ns1:propertyDefinition>
                <ns1:stringValue>UnitTest-Server-Common.ps1</ns1:stringValue>
            </ns1:defaultValue>
            <ns1:propertyType>
                <ns1:name>string-any</ns1:name>
                <ns1:href>propertytype/4</ns1:href>
                <ns1:id>4</ns1:id>
                <ns1:type>application/com.servicemesh.agility.api.PropertyType+xml</ns1:type>
            </ns1:propertyType>
            <ns1:assetPropertyLinkId>e3564628-dbe8-4f7c-92f8-0e2f3bdeb4d1</ns1:assetPropertyLinkId>
        </ns1:variable>
        <ns1:variable>
            <ns1:name>ADMIN</ns1:name>
            <ns1:id>359</ns1:id>
            <ns1:description>Domain administrator</ns1:description>
            <ns1:uuid>70e1ad62-5061-4abf-9fe7-46fb1ff7d242</ns1:uuid>
            <ns1:top>false</ns1:top>
            <ns1:assetPath></ns1:assetPath>
            <ns1:detailedAssetPath></ns1:detailedAssetPath>
            <ns1:lifecycleVersion>-1</ns1:lifecycleVersion>
            <ns1:removable>true</ns1:removable>
            <ns1:displayName>ADMIN</ns1:displayName>
            <ns1:readable>true</ns1:readable>
            <ns1:writable>true</ns1:writable>
            <ns1:minRequired>0</ns1:minRequired>
            <ns1:maxAllowed>1</ns1:maxAllowed>
            <ns1:validator/>
            <ns1:defaultValue>
                <ns1:id>4290</ns1:id>
                <ns1:name>ADMIN</ns1:name>
                <ns1:encrypted>false</ns1:encrypted>
                <ns1:overridable>true</ns1:overridable>
                <ns1:propertyType>
                    <ns1:name>string-any</ns1:name>
                    <ns1:href>/propertytype/4</ns1:href>
                    <ns1:id>4</ns1:id>
                    <ns1:rel>up</ns1:rel>
                    <ns1:type>application/com.servicemesh.agility.api.PropertyType+xml</ns1:type>
                    <ns1:position>0</ns1:position>
                </ns1:propertyType>
                <ns1:propertyDefinition xsi:type="ns1:Link">
                    <ns1:name>ADMIN</ns1:name>
                    <ns1:href>/propertydefinition/359</ns1:href>
                    <ns1:id>359</ns1:id>
                    <ns1:rel>up</ns1:rel>
                    <ns1:type>application/com.servicemesh.agility.api.PropertyDefinition+xml</ns1:type>
                    <ns1:position>0</ns1:position>
                </ns1:propertyDefinition>
                <ns1:stringValue>agilitydeploy</ns1:stringValue>
            </ns1:defaultValue>
            <ns1:propertyType>
                <ns1:name>string-any</ns1:name>
                <ns1:href>propertytype/4</ns1:href>
                <ns1:id>4</ns1:id>
                <ns1:type>application/com.servicemesh.agility.api.PropertyType+xml</ns1:type>
            </ns1:propertyType>
            <ns1:assetPropertyLinkId>77ee805f-754e-4129-b4f7-82c3b6cd3b35</ns1:assetPropertyLinkId>
        </ns1:variable>
        <ns1:variable>
            <ns1:name>TESTFRAMEWORKFOLDER</ns1:name>
            <ns1:id>360</ns1:id>
            <ns1:description>Folder name where test framework files are stored</ns1:description>
            <ns1:uuid>9f395fff-ab3a-4838-915a-e76f5c0eaa92</ns1:uuid>
            <ns1:top>false</ns1:top>
            <ns1:assetPath></ns1:assetPath>
            <ns1:detailedAssetPath></ns1:detailedAssetPath>
            <ns1:lifecycleVersion>-1</ns1:lifecycleVersion>
            <ns1:removable>true</ns1:removable>
            <ns1:displayName>TESTFRAMEWORKFOLDER</ns1:displayName>
            <ns1:readable>true</ns1:readable>
            <ns1:writable>true</ns1:writable>
            <ns1:minRequired>0</ns1:minRequired>
            <ns1:maxAllowed>1</ns1:maxAllowed>
            <ns1:validator/>
            <ns1:defaultValue>
                <ns1:id>4291</ns1:id>
                <ns1:name>TESTFRAMEWORKFOLDER</ns1:name>
                <ns1:encrypted>false</ns1:encrypted>
                <ns1:overridable>true</ns1:overridable>
                <ns1:propertyType>
                    <ns1:name>string-any</ns1:name>
                    <ns1:href>/propertytype/4</ns1:href>
                    <ns1:id>4</ns1:id>
                    <ns1:rel>up</ns1:rel>
                    <ns1:type>application/com.servicemesh.agility.api.PropertyType+xml</ns1:type>
                    <ns1:position>0</ns1:position>
                </ns1:propertyType>
                <ns1:propertyDefinition xsi:type="ns1:Link">
                    <ns1:name>TESTFRAMEWORKFOLDER</ns1:name>
                    <ns1:href>/propertydefinition/360</ns1:href>
                    <ns1:id>360</ns1:id>
                    <ns1:rel>up</ns1:rel>
                    <ns1:type>application/com.servicemesh.agility.api.PropertyDefinition+xml</ns1:type>
                    <ns1:position>0</ns1:position>
                </ns1:propertyDefinition>
                <ns1:stringValue>TestFramework</ns1:stringValue>
            </ns1:defaultValue>
            <ns1:propertyType>
                <ns1:name>string-any</ns1:name>
                <ns1:href>propertytype/4</ns1:href>
                <ns1:id>4</ns1:id>
                <ns1:type>application/com.servicemesh.agility.api.PropertyType+xml</ns1:type>
            </ns1:propertyType>
            <ns1:assetPropertyLinkId>2ef90d52-8de1-4ecd-8e7b-a42ed014d5c4</ns1:assetPropertyLinkId>
        </ns1:variable>
        <ns1:runOnProvisionOnly>false</ns1:runOnProvisionOnly>
    </ns1:pendingAsset>
    <ns1:Asset xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="ns1:Package">
        <ns1:name>MWS2R3 - ConfigMgr2012 - Primary Build</ns1:name>
        <ns1:id>76</ns1:id>
        <ns1:description></ns1:description>
        <ns1:uuid>f51d13ee-b9c6-4aa9-a989-32aaaf5becdd</ns1:uuid>
        <ns1:assetType>
            <ns1:name>package</ns1:name>
            <ns1:href>assettype/3</ns1:href>
            <ns1:id>3</ns1:id>
            <ns1:rel>up</ns1:rel>
            <ns1:type>application/com.servicemesh.agility.api.AssetType+xml</ns1:type>
            <ns1:position>0</ns1:position>
        </ns1:assetType>
        <ns1:top>true</ns1:top>
        <ns1:assetPath>/Root/MWS2R3_SYD</ns1:assetPath>
        <ns1:detailedAssetPath>/Root:#ID#1:#TYPE#VMContainer/MWS2R3_SYD:#ID#8:#TYPE#VMProject</ns1:detailedAssetPath>
        <ns1:lifecycleVersion>-1</ns1:lifecycleVersion>
        <ns1:removable>true</ns1:removable>
        <ns1:domain>
            <ns1:name>domain1</ns1:name>
            <ns1:href>domain/1</ns1:href>
            <ns1:id>1</ns1:id>
            <ns1:rel>up</ns1:rel>
            <ns1:type>application/com.servicemesh.agility.api.Domain+xml</ns1:type>
            <ns1:position>0</ns1:position>
        </ns1:domain>
        <ns1:creator>
            <ns1:name>dridley</ns1:name>
            <ns1:href>user/12</ns1:href>
            <ns1:id>12</ns1:id>
            <ns1:rel>up</ns1:rel>
            <ns1:type>application/com.servicemesh.agility.api.User+xml</ns1:type>
            <ns1:position>0</ns1:position>
        </ns1:creator>
        <ns1:created>2015-06-05T16:18:05+10:00</ns1:created>
        <ns1:lockType>0</ns1:lockType>
        <ns1:lastModified>2015-07-02T09:59:27+10:00</ns1:lastModified>
        <ns1:parent>
            <ns1:name>MWS2R3_SYD</ns1:name>
            <ns1:href>project/8</ns1:href>
            <ns1:id>8</ns1:id>
            <ns1:rel>up</ns1:rel>
            <ns1:type>application/com.servicemesh.agility.api.Project+xml</ns1:type>
            <ns1:position>0</ns1:position>
        </ns1:parent>
        <ns1:version>-1</ns1:version>
        <ns1:latest>false</ns1:latest>
        <ns1:versionStatus>inprogress</ns1:versionStatus>
        <ns1:checkoutAllowed>false</ns1:checkoutAllowed>
        <ns1:headAllowed>false</ns1:headAllowed>
        <ns1:operatingSystem>Windows</ns1:operatingSystem>
        <ns1:install>
            <ns1:name>MWS2R3 - CM2012 - Primary Env Variables</ns1:name>
            <ns1:href>script/364</ns1:href>
            <ns1:id>378</ns1:id>
            <ns1:rel>up</ns1:rel>
            <ns1:type>application/com.servicemesh.agility.api.Script+xml</ns1:type>
            <ns1:position>0</ns1:position>
        </ns1:install>
        <ns1:install>
            <ns1:name>MWS2R3 - CM2012 - Common Prereqs</ns1:name>
            <ns1:href>script/367</ns1:href>
            <ns1:id>381</ns1:id>
            <ns1:rel>up</ns1:rel>
            <ns1:type>application/com.servicemesh.agility.api.Script+xml</ns1:type>
            <ns1:position>0</ns1:position>
        </ns1:install>
        <ns1:install>
            <ns1:name>MWS2R3 - CM2012 - Primary Prereqs</ns1:name>
            <ns1:href>script/360</ns1:href>
            <ns1:id>390</ns1:id>
            <ns1:rel>up</ns1:rel>
            <ns1:type>application/com.servicemesh.agility.api.Script+xml</ns1:type>
            <ns1:position>0</ns1:position>
        </ns1:install>
        <ns1:install>
            <ns1:name>MWS2R3 - CM2012 - Primary Install</ns1:name>
            <ns1:href>script/363</ns1:href>
            <ns1:id>373</ns1:id>
            <ns1:rel>up</ns1:rel>
            <ns1:type>application/com.servicemesh.agility.api.Script+xml</ns1:type>
            <ns1:position>0</ns1:position>
        </ns1:install>
        <ns1:operational>
            <ns1:name>MWS2R3 - AD Global Repository</ns1:name>
            <ns1:href>script/132</ns1:href>
            <ns1:id>264</ns1:id>
            <ns1:rel>up</ns1:rel>
            <ns1:type>application/com.servicemesh.agility.api.Script+xml</ns1:type>
            <ns1:position>0</ns1:position>
        </ns1:operational>
        <ns1:operational>
            <ns1:name>MWS2R3 - CM2012 - Primary Env Variables</ns1:name>
            <ns1:href>script/364</ns1:href>
            <ns1:id>378</ns1:id>
            <ns1:rel>up</ns1:rel>
            <ns1:type>application/com.servicemesh.agility.api.Script+xml</ns1:type>
            <ns1:position>0</ns1:position>
        </ns1:operational>
        <ns1:operational>
            <ns1:name>MWS2R3 - CM2012 - Common Prereqs</ns1:name>
            <ns1:href>script/367</ns1:href>
            <ns1:id>381</ns1:id>
            <ns1:rel>up</ns1:rel>
            <ns1:type>application/com.servicemesh.agility.api.Script+xml</ns1:type>
            <ns1:position>0</ns1:position>
        </ns1:operational>
        <ns1:operational>
            <ns1:name>MWS2R3 - CM2012 - Primary Prereqs</ns1:name>
            <ns1:href>script/360</ns1:href>
            <ns1:id>390</ns1:id>
            <ns1:rel>up</ns1:rel>
            <ns1:type>application/com.servicemesh.agility.api.Script+xml</ns1:type>
            <ns1:position>0</ns1:position>
        </ns1:operational>
        <ns1:operational>
            <ns1:name>MWS2R3 - CM2012 - Primary Install</ns1:name>
            <ns1:href>script/363</ns1:href>
            <ns1:id>373</ns1:id>
            <ns1:rel>up</ns1:rel>
            <ns1:type>application/com.servicemesh.agility.api.Script+xml</ns1:type>
            <ns1:position>0</ns1:position>
        </ns1:operational>
        <ns1:operational>
            <ns1:name>MWS2R3 - CM2012 - Primary (POST Config)</ns1:name>
            <ns1:href>script/365</ns1:href>
            <ns1:id>376</ns1:id>
            <ns1:rel>up</ns1:rel>
            <ns1:type>application/com.servicemesh.agility.api.Script+xml</ns1:type>
            <ns1:position>0</ns1:position>
        </ns1:operational>
        <ns1:operational>
            <ns1:name>MWS2R3 - CM2012 - Secondary Install</ns1:name>
            <ns1:href>script/362</ns1:href>
            <ns1:id>374</ns1:id>
            <ns1:rel>up</ns1:rel>
            <ns1:type>application/com.servicemesh.agility.api.Script+xml</ns1:type>
            <ns1:position>0</ns1:position>
        </ns1:operational>
        <ns1:operational>
            <ns1:name>MWS2R3 - CM2012 - Site System Install</ns1:name>
            <ns1:href>script/366</ns1:href>
            <ns1:id>375</ns1:id>
            <ns1:rel>up</ns1:rel>
            <ns1:type>application/com.servicemesh.agility.api.Script+xml</ns1:type>
            <ns1:position>0</ns1:position>
        </ns1:operational>
        <ns1:operational>
            <ns1:name>MWS2R3 - Unit Testing</ns1:name>
            <ns1:href>script/268</ns1:href>
            <ns1:id>245</ns1:id>
            <ns1:rel>up</ns1:rel>
            <ns1:type>application/com.servicemesh.agility.api.Script+xml</ns1:type>
            <ns1:position>0</ns1:position>
        </ns1:operational>
    </ns1:Asset>
</ns1:Envelope>
