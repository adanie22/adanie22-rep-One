<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<ns1:Envelope xmlns:ns1="http://servicemesh.com/agility/api" xmlns:ns2="http://servicemesh.com/core/messaging" ns1:version="3.0" ns1:productVersion="9.2.4">
    <ns1:Asset xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="ns1:Script">
        <ns1:name>MWS2R3 - AD Global Repository</ns1:name>
        <ns1:id>264</ns1:id>
        <ns1:description></ns1:description>
        <ns1:uuid>6d29211d-bc72-4a86-bf40-6ab05e05073b</ns1:uuid>
        <ns1:assetType>
            <ns1:name>script</ns1:name>
            <ns1:href>assettype/2</ns1:href>
            <ns1:id>2</ns1:id>
            <ns1:rel>up</ns1:rel>
            <ns1:type>application/com.servicemesh.agility.api.AssetType+xml</ns1:type>
            <ns1:position>0</ns1:position>
        </ns1:assetType>
        <ns1:top>true</ns1:top>
        <ns1:assetPath>/Root/MWS2R3_SYD</ns1:assetPath>
        <ns1:detailedAssetPath>/Root:#ID#1:#TYPE#VMContainer/MWS2R3_SYD:#ID#8:#TYPE#VMProject</ns1:detailedAssetPath>
        <ns1:lifecycleVersion>-1</ns1:lifecycleVersion>
        <ns1:removable>true</ns1:removable>
        <ns1:domain>
            <ns1:name>domain1</ns1:name>
            <ns1:href>domain/1</ns1:href>
            <ns1:id>1</ns1:id>
            <ns1:rel>up</ns1:rel>
            <ns1:type>application/com.servicemesh.agility.api.Domain+xml</ns1:type>
            <ns1:position>0</ns1:position>
        </ns1:domain>
        <ns1:creator>
            <ns1:name>admin</ns1:name>
            <ns1:href>user/1</ns1:href>
            <ns1:id>1</ns1:id>
            <ns1:rel>up</ns1:rel>
            <ns1:type>application/com.servicemesh.agility.api.User+xml</ns1:type>
            <ns1:position>0</ns1:position>
        </ns1:creator>
        <ns1:created>2015-05-28T10:01:28+10:00</ns1:created>
        <ns1:lockType>0</ns1:lockType>
        <ns1:lastModified>2015-05-28T10:02:43+10:00</ns1:lastModified>
        <ns1:parent>
            <ns1:name>MWS2R3_SYD</ns1:name>
            <ns1:href>project/8</ns1:href>
            <ns1:id>8</ns1:id>
            <ns1:rel>up</ns1:rel>
            <ns1:type>application/com.servicemesh.agility.api.Project+xml</ns1:type>
            <ns1:position>0</ns1:position>
        </ns1:parent>
        <ns1:slot>d049eb4d-ce47-4986-aa40-f05ae322932b</ns1:slot>
        <ns1:version>6</ns1:version>
        <ns1:latest>false</ns1:latest>
        <ns1:publishComment></ns1:publishComment>
        <ns1:slotId>123</ns1:slotId>
        <ns1:publisher>
            <ns1:name>admin</ns1:name>
            <ns1:href>user/1</ns1:href>
            <ns1:id>1</ns1:id>
            <ns1:rel>up</ns1:rel>
            <ns1:type>application/com.servicemesh.agility.api.User+xml</ns1:type>
            <ns1:position>0</ns1:position>
        </ns1:publisher>
        <ns1:versionStatus>active</ns1:versionStatus>
        <ns1:checkoutAllowed>false</ns1:checkoutAllowed>
        <ns1:headAllowed>false</ns1:headAllowed>
        <ns1:operatingSystem>Windows|2012</ns1:operatingSystem>
        <ns1:enableExtensions>false</ns1:enableExtensions>
        <ns1:body>
# Support multiple deployment environments
$environment = $ENVIRONMENT

$script = @'
Add-Type -AssemblyName System.Web

function set-globalvariable($key,$val) {
	__ENVCODE__
	Invoke-WebRequest -Method PUT -Uri http://10.3.40.5:4001/v2/keys/$($key)?value=$([System.Web.HttpUtility]::UrlEncode($($val))) -UseBasicParsing
}

function get-globalvariable($key) {
	__ENVCODE__
	$resp = Invoke-RestMethod -Method GET -Uri http://10.3.40.5:4001/v2/keys/$key
	return $resp.node
}

function get-globalvariable_json($key) {
	__ENVCODE__
	$resp = Invoke-RestMethod -Method GET -Uri http://10.3.40.5:4001/v2/keys/$key
	return ConvertFrom-Json $resp.node.value
}


function connect-deploymentshare
{
    #$share = get-globalvariable 'Global/DeploymentShare'
    #$username = get-globalvariable 'Global/DeploymentUsername'
    #$password = get-globalvariable 'Global/DeploymentPassword'
    
    #$secure_pwd = convertto-securestring $password.value -asplaintext -force
    
    #$dcred = new-object -typename System.Management.Automation.PSCredential -argumentlist $username.value, $secure_pwd
    #$d = New-PSDrive -Name 'Y' -PSProvider FileSystem -Root $share.value -Credential $dcred -Scope Global -persist 

	# [DRidley] updated to utilise dynamic drive letter 'drv' &amp; NET USE instead, as New-PSDrive always fails when run a 2nd time
	$share = 	(get-globalvariable(&quot;Global\DeploymentShare&quot;)).value
    $username = (get-globalvariable(&quot;Global\DeploymentUsername&quot;)).value
    $password = (get-globalvariable(&quot;Global\DeploymentPassword&quot;)).value
    
	$global:drv = dir function:[m-z]: -Name | Where { -Not (test-path $_ )} | select -first 1
	$d = net use $drv $share /user:$username $password
    
    #If (Test-Path $drv) {Write-Host &quot;$drv = Yes&quot;} Else {Write-Host &quot;$drv = No&quot;; EXIT}
}


function disconnect-deploymentshare
{
    #$d = Remove-PSDrive -Name 'Y'
    $d = net use $drv /delete
}


# Stiven: cater for the introduction of deploy folder subfolders as a result of introducing SVN
#         assumption is computer related folders will always and only be in the deployScript folder
function get-files($computer){
    connect-deploymentshare
    
    # Copy Common Files
    Copy-Item &quot;$drv\DeployScript\Common\*&quot; .\ -Recurse -force -Verbose
    Copy-Item &quot;$drv\DeployInstall\Common\*&quot; .\ -Recurse -force -Verbose
        
    # Copy Computer Specific files
    $c = $computer
    if( Test-Path -Path (&quot;$drv\DeployScript\&quot; + $c)){
    	$p = &quot;$drv\DeployScript\&quot; + $c + &quot;\*&quot;
    	Copy-Item $p .\ -Recurse -force -Verbose
    }else{
    	write-output &quot;computername folder does not exist - $c&quot;
    }
    
    disconnect-deploymentshare
}


function Get-AppFiles($appname){
   connect-deploymentshare

   $rootFolder = &quot;$drv\DeployScript\&quot;
   Copy-Files $rootFolder $appname

   $rootFolder = &quot;$drv\DeployInstall\&quot;
   Copy-Files $rootFolder $appname

   disconnect-deploymentshare
}

# Stiven: cater for the introduction of deploy folder subfolders as a result of introducing SVN
function Copy-Files($rootfolder, $appname){
    $p = $rootFolder + $appname + &quot;\*&quot;
    if(Test-Path -Path ($rootFolder + $appname)){
        Write-Output &quot;Copying Application files from $rootFolder$($appname)&quot;
        Copy-Item $p .\ -Recurse -force
    } Else {
        Write-Error &quot;Application folder $appname does not exist&quot; -ErrorAction SilentlyContinue
    }  
}

'@


# Perform a replace on __ENVCODE__ to support multiple AD environments
if($environment -eq $null){
	write-output &quot;Generating script for default environment&quot;
	$script = $script -replace &quot;__ENVCODE__&quot;,&quot;&quot;
}else{
	write-output &quot;Generating script for [$environment] environment&quot;
	$newstring = $('$key= &quot;[' + $environment + ']/$key&quot;')
    	$script = $script -replace &quot;__ENVCODE__&quot;,$newstring
}

$script | out-file &quot;GlobalRepository.ps1&quot;

# Load Common functions
#. .\GlobalRepository.ps1
# download common files and computer specific files
#get-files</ns1:body>
        <ns1:type>Guest</ns1:type>
        <ns1:language>
            <ns1:name>powershell</ns1:name>
            <ns1:href>scriptlanguage/5</ns1:href>
            <ns1:id>5</ns1:id>
            <ns1:rel>down</ns1:rel>
            <ns1:type>application/com.servicemesh.agility.api.ScriptLanguage+xml</ns1:type>
            <ns1:position>0</ns1:position>
        </ns1:language>
        <ns1:runAsAdmin>false</ns1:runAsAdmin>
        <ns1:timeout>3600</ns1:timeout>
        <ns1:retries>0</ns1:retries>
        <ns1:delay>0</ns1:delay>
        <ns1:errorAction>Continue</ns1:errorAction>
        <ns1:rebootRequired>false</ns1:rebootRequired>
        <ns1:variable>
            <ns1:name>ENVIRONMENT</ns1:name>
            <ns1:id>515</ns1:id>
            <ns1:description></ns1:description>
            <ns1:uuid>f91b5269-a802-4199-9abc-037cdc92f737</ns1:uuid>
            <ns1:top>false</ns1:top>
            <ns1:assetPath></ns1:assetPath>
            <ns1:detailedAssetPath></ns1:detailedAssetPath>
            <ns1:lifecycleVersion>-1</ns1:lifecycleVersion>
            <ns1:removable>true</ns1:removable>
            <ns1:displayName>ENVIRONMENT</ns1:displayName>
            <ns1:readable>true</ns1:readable>
            <ns1:writable>true</ns1:writable>
            <ns1:minRequired>0</ns1:minRequired>
            <ns1:maxAllowed>1</ns1:maxAllowed>
            <ns1:validator/>
            <ns1:propertyType>
                <ns1:name>string-any</ns1:name>
                <ns1:href>propertytype/4</ns1:href>
                <ns1:id>4</ns1:id>
                <ns1:type>application/com.servicemesh.agility.api.PropertyType+xml</ns1:type>
            </ns1:propertyType>
            <ns1:assetPropertyLinkId>d368f55d-868c-4731-9ec3-21dd29bf3625</ns1:assetPropertyLinkId>
        </ns1:variable>
        <ns1:runOnProvisionOnly>false</ns1:runOnProvisionOnly>
    </ns1:Asset>
</ns1:Envelope>
