<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<ns1:Envelope xmlns:ns1="http://servicemesh.com/agility/api" xmlns:ns2="http://servicemesh.com/core/messaging" ns1:version="3.0" ns1:productVersion="9.2.4">
    <ns1:Asset xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="ns1:Script">
        <ns1:name>MWS2R3 - AD Add Domain Controller</ns1:name>
        <ns1:id>160</ns1:id>
        <ns1:description></ns1:description>
        <ns1:uuid>0295ffa4-64fd-4a7f-b56f-fc4d5307d65c</ns1:uuid>
        <ns1:assetType>
            <ns1:name>script</ns1:name>
            <ns1:href>assettype/2</ns1:href>
            <ns1:id>2</ns1:id>
            <ns1:rel>up</ns1:rel>
            <ns1:type>application/com.servicemesh.agility.api.AssetType+xml</ns1:type>
            <ns1:position>0</ns1:position>
        </ns1:assetType>
        <ns1:top>true</ns1:top>
        <ns1:assetPath>/Root/MWS2R3_SYD</ns1:assetPath>
        <ns1:detailedAssetPath>/Root:#ID#1:#TYPE#VMContainer/MWS2R3_SYD:#ID#8:#TYPE#VMProject</ns1:detailedAssetPath>
        <ns1:lifecycleVersion>-1</ns1:lifecycleVersion>
        <ns1:removable>true</ns1:removable>
        <ns1:domain>
            <ns1:name>domain1</ns1:name>
            <ns1:href>domain/1</ns1:href>
            <ns1:id>1</ns1:id>
            <ns1:rel>up</ns1:rel>
            <ns1:type>application/com.servicemesh.agility.api.Domain+xml</ns1:type>
            <ns1:position>0</ns1:position>
        </ns1:domain>
        <ns1:creator>
            <ns1:name>mfreema6</ns1:name>
            <ns1:href>user/7</ns1:href>
            <ns1:id>7</ns1:id>
            <ns1:rel>up</ns1:rel>
            <ns1:type>application/com.servicemesh.agility.api.User+xml</ns1:type>
            <ns1:position>0</ns1:position>
        </ns1:creator>
        <ns1:created>2015-05-14T15:06:04+10:00</ns1:created>
        <ns1:lockType>0</ns1:lockType>
        <ns1:lastModified>2015-05-14T15:09:00+10:00</ns1:lastModified>
        <ns1:parent>
            <ns1:name>MWS2R3_SYD</ns1:name>
            <ns1:href>project/8</ns1:href>
            <ns1:id>8</ns1:id>
            <ns1:rel>up</ns1:rel>
            <ns1:type>application/com.servicemesh.agility.api.Project+xml</ns1:type>
            <ns1:position>0</ns1:position>
        </ns1:parent>
        <ns1:slot>d475f855-93a3-45ae-a5bc-ad36907726ce</ns1:slot>
        <ns1:version>2</ns1:version>
        <ns1:latest>false</ns1:latest>
        <ns1:publishComment></ns1:publishComment>
        <ns1:slotId>122</ns1:slotId>
        <ns1:publisher>
            <ns1:name>mfreema6</ns1:name>
            <ns1:href>user/7</ns1:href>
            <ns1:id>7</ns1:id>
            <ns1:rel>up</ns1:rel>
            <ns1:type>application/com.servicemesh.agility.api.User+xml</ns1:type>
            <ns1:position>0</ns1:position>
        </ns1:publisher>
        <ns1:versionStatus>active</ns1:versionStatus>
        <ns1:checkoutAllowed>false</ns1:checkoutAllowed>
        <ns1:headAllowed>false</ns1:headAllowed>
        <ns1:operatingSystem>Windows|2012</ns1:operatingSystem>
        <ns1:enableExtensions>false</ns1:enableExtensions>
        <ns1:body>#	ScriptName: 	AD Add Domain Controller
#	Author: 	Mark Freeman
#	Required Variables: None
#	Description:
#
#	Adds a second domain controller to the resource domain

#include dynamic data store
# Load Common functions
. .\Logging.ps1
. .\GlobalRepository.ps1
. .\LaunchProcess.ps1
. .\FilesUtility.ps1

write-output &quot;Restricting RPC Port Ranges&quot;
MD HKLM:\Software\Microsoft\Rpc\Internet
New-ItemProperty -Path HKLM:\Software\Microsoft\Rpc\Internet -Name Ports -PropertyType MultiString  -Value &quot;49152-49407&quot;
New-ItemProperty -Path HKLM:\Software\Microsoft\Rpc\Internet -Name PortsInternetAvailable -PropertyType String  -Value &quot;Y&quot;
New-ItemProperty -Path HKLM:\Software\Microsoft\Rpc\Internet -Name UseInternetPorts -PropertyType String  -Value &quot;Y&quot;

write-output &quot;Creating folders&quot;
MD e:\Admin
MD e:\Scripts

write-output &quot;Creating reserve file&quot;
fsutil file createnew e:\reservefile 512000000

#install roles and features

$addsTools = &quot;RSAT-AD-Tools&quot;

Add-WindowsFeature $addsTools


#Install AD DS, DNS and GPMC

start-job -Name addFeature -ScriptBlock {
  Add-WindowsFeature -Name &quot;ad-domain-services&quot; -IncludeAllSubFeature -IncludeManagementTools                                                                  
  Add-WindowsFeature -Name &quot;dns&quot; -IncludeAllSubFeature -IncludeManagementTools                                    
  Add-WindowsFeature -Name &quot;gpmc&quot; -IncludeAllSubFeature -IncludeManagementTools   }
Wait-Job -Name addFeature


# Create New Forest, add Domain Controller

$domainname = (get-globalvariable &quot;Global\DomainFQDN&quot;).value
$domainNB = (get-globalvariable &quot;Global\DomainNetBIOS&quot;).value
$domainjoin_short_username = (get-globalvariable &quot;Global\DeploymentUsername&quot;).value
$domainjoinusername = &quot;$domainNB\$domainjoin_short_username&quot;
$domainjoinpassword = (get-globalvariable &quot;Global\DeploymentPassword&quot;).value
$dsrmPassword = (get-globalvariable &quot;Global\DomainDSRMPassword&quot;).value
write-output &quot;Adding DC to &quot; $domainname &quot; using account &quot; $domainjoinusername

$dnsip = (get-globalvariable &quot;AD\PrimaryDNS&quot;).value
write-output &quot;setting primary dns to $dnsip&quot;
$na=Get-NetAdapter -Physical | where status -eq 'up'
Set-DnsClientServerAddress -InterfaceIndex $na.ifIndex -ServerAddresses ($dnsip,&quot;127.0.0.1&quot;)


$secure_dsrm_pwd = convertto-securestring $dsrmPassword -asplaintext -force
$secure_dj_pwd = convertto-securestring $domainjoinpassword -asplaintext -force

$cred = new-object -typename System.Management.Automation.PSCredential `
         -argumentlist $domainjoinusername, $secure_dj_pwd

Import-Module ADDSDeployment
Install-ADDSDomainController `
-NoGlobalCatalog:$false `
-CreateDnsDelegation:$False `
-Credential $cred `
-CriticalReplicationOnly:$false `
-DatabasePath &quot;E:\NTDS-DB&quot; `
-DomainName $domainname `
-SafeModeAdministratorPassword $secure_dsrm_pwd `
-InstallDns:$True `
-LogPath &quot;L:\NTDS-Logs&quot; `
-NoRebootOnCompletion:$true `
-SysvolPath &quot;E:\SYSVOL&quot; `
-Force:$true `
-Confirm:$false



$ip = Get-NetIPAddress | Where-Object -FilterScript {$_.AddressFamily -eq &quot;IPv4&quot; } | Where-Object -FilterScript {$_.IPAddress -ne &quot;127.0.0.1&quot;}
$ipa = $ip.IPAddress
Set-GlobalVariable &quot;AD\SecondaryDNS&quot; $ip.IPAddress
</ns1:body>
        <ns1:type>Guest</ns1:type>
        <ns1:language>
            <ns1:name>powershell</ns1:name>
            <ns1:href>scriptlanguage/5</ns1:href>
            <ns1:id>5</ns1:id>
            <ns1:rel>down</ns1:rel>
            <ns1:type>application/com.servicemesh.agility.api.ScriptLanguage+xml</ns1:type>
            <ns1:position>0</ns1:position>
        </ns1:language>
        <ns1:runAsAdmin>false</ns1:runAsAdmin>
        <ns1:timeout>3600</ns1:timeout>
        <ns1:retries>0</ns1:retries>
        <ns1:delay>0</ns1:delay>
        <ns1:errorAction>Continue</ns1:errorAction>
        <ns1:rebootRequired>true</ns1:rebootRequired>
        <ns1:runOnProvisionOnly>false</ns1:runOnProvisionOnly>
    </ns1:Asset>
</ns1:Envelope>
